{"/home/travis/build/npmtest/node-npmtest-bedwetter/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-bedwetter/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_bedwetter */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-bedwetter/lib.npmtest_bedwetter.js":{"path":"/home/travis/build/npmtest/node-npmtest-bedwetter/lib.npmtest_bedwetter.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":54}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":60}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_bedwetter */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_bedwetter = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_bedwetter = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-bedwetter/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-bedwetter/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":53}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":67},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-bedwetter && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_bedwetter */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_bedwetter","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_bedwetter.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_bedwetter.rollup.js'] =","            local.assetsDict['/assets.npmtest_bedwetter.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_bedwetter.__dirname + '/lib.npmtest_bedwetter.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-bedwetter/node_modules/bedwetter/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-bedwetter/node_modules/bedwetter/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":34}}},"branchMap":{},"code":["module.exports = require('./lib');"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-bedwetter/node_modules/bedwetter/lib/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-bedwetter/node_modules/bedwetter/lib/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":1,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":1,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":1,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":1,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":1,"114":0,"115":0,"116":0,"117":1,"118":0,"119":0,"120":0,"121":1,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":1,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":1,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0,0,0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0],"8":[0,0],"9":[0,0,0,0],"10":[0,0],"11":[0,0,0],"12":[0,0],"13":[0,0,0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0],"18":[0,0],"19":[0,0,0,0],"20":[0,0],"21":[0,0,0,0,0],"22":[0,0],"23":[0,0,0],"24":[0,0],"25":[0,0,0,0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0,0,0],"31":[0,0],"32":[0,0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0,0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0,0],"53":[0,0],"54":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":73,"loc":{"start":{"line":73,"column":19},"end":{"line":73,"column":51}}},"2":{"name":"(anonymous_2)","line":77,"loc":{"start":{"line":77,"column":32},"end":{"line":77,"column":64}}},"3":{"name":"(anonymous_3)","line":123,"loc":{"start":{"line":123,"column":31},"end":{"line":123,"column":62}}},"4":{"name":"(anonymous_4)","line":289,"loc":{"start":{"line":289,"column":36},"end":{"line":289,"column":67}}},"5":{"name":"(anonymous_5)","line":315,"loc":{"start":{"line":315,"column":37},"end":{"line":315,"column":57}}},"6":{"name":"(anonymous_6)","line":317,"loc":{"start":{"line":317,"column":42},"end":{"line":317,"column":87}}},"7":{"name":"(anonymous_7)","line":343,"loc":{"start":{"line":343,"column":26},"end":{"line":343,"column":56}}},"8":{"name":"(anonymous_8)","line":373,"loc":{"start":{"line":373,"column":25},"end":{"line":373,"column":48}}},"9":{"name":"(anonymous_9)","line":384,"loc":{"start":{"line":384,"column":33},"end":{"line":384,"column":56}}},"10":{"name":"(anonymous_10)","line":394,"loc":{"start":{"line":394,"column":27},"end":{"line":394,"column":50}}},"11":{"name":"(anonymous_11)","line":417,"loc":{"start":{"line":417,"column":33},"end":{"line":417,"column":56}}},"12":{"name":"(anonymous_12)","line":438,"loc":{"start":{"line":438,"column":29},"end":{"line":438,"column":47}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":27}},"4":{"start":{"line":9,"column":0},"end":{"line":18,"column":1}},"5":{"start":{"line":21,"column":0},"end":{"line":21,"column":19}},"6":{"start":{"line":23,"column":0},"end":{"line":65,"column":1}},"7":{"start":{"line":73,"column":0},"end":{"line":114,"column":2}},"8":{"start":{"line":75,"column":4},"end":{"line":75,"column":34}},"9":{"start":{"line":77,"column":4},"end":{"line":111,"column":7}},"10":{"start":{"line":82,"column":8},"end":{"line":82,"column":47}},"11":{"start":{"line":84,"column":8},"end":{"line":84,"column":60}},"12":{"start":{"line":87,"column":8},"end":{"line":87,"column":39}},"13":{"start":{"line":90,"column":8},"end":{"line":90,"column":47}},"14":{"start":{"line":93,"column":8},"end":{"line":93,"column":64}},"15":{"start":{"line":97,"column":8},"end":{"line":97,"column":50}},"16":{"start":{"line":99,"column":8},"end":{"line":99,"column":93}},"17":{"start":{"line":102,"column":8},"end":{"line":102,"column":93}},"18":{"start":{"line":104,"column":8},"end":{"line":104,"column":66}},"19":{"start":{"line":107,"column":8},"end":{"line":107,"column":75}},"20":{"start":{"line":109,"column":8},"end":{"line":109,"column":47}},"21":{"start":{"line":113,"column":4},"end":{"line":113,"column":11}},"22":{"start":{"line":116,"column":0},"end":{"line":118,"column":2}},"23":{"start":{"line":121,"column":0},"end":{"line":121,"column":39}},"24":{"start":{"line":123,"column":0},"end":{"line":287,"column":1}},"25":{"start":{"line":125,"column":4},"end":{"line":125,"column":31}},"26":{"start":{"line":126,"column":4},"end":{"line":126,"column":29}},"27":{"start":{"line":128,"column":4},"end":{"line":128,"column":56}},"28":{"start":{"line":130,"column":4},"end":{"line":130,"column":50}},"29":{"start":{"line":131,"column":4},"end":{"line":131,"column":48}},"30":{"start":{"line":132,"column":4},"end":{"line":132,"column":12}},"31":{"start":{"line":135,"column":4},"end":{"line":140,"column":5}},"32":{"start":{"line":139,"column":8},"end":{"line":139,"column":25}},"33":{"start":{"line":142,"column":4},"end":{"line":142,"column":28}},"34":{"start":{"line":143,"column":4},"end":{"line":143,"column":18}},"35":{"start":{"line":144,"column":4},"end":{"line":274,"column":5}},"36":{"start":{"line":148,"column":12},"end":{"line":171,"column":13}},"37":{"start":{"line":152,"column":16},"end":{"line":152,"column":46}},"38":{"start":{"line":154,"column":19},"end":{"line":171,"column":13}},"39":{"start":{"line":159,"column":16},"end":{"line":159,"column":46}},"40":{"start":{"line":161,"column":19},"end":{"line":171,"column":13}},"41":{"start":{"line":167,"column":16},"end":{"line":167,"column":43}},"42":{"start":{"line":170,"column":16},"end":{"line":170,"column":98}},"43":{"start":{"line":173,"column":12},"end":{"line":173,"column":18}},"44":{"start":{"line":177,"column":12},"end":{"line":186,"column":13}},"45":{"start":{"line":182,"column":16},"end":{"line":182,"column":46}},"46":{"start":{"line":185,"column":16},"end":{"line":185,"column":98}},"47":{"start":{"line":188,"column":12},"end":{"line":188,"column":18}},"48":{"start":{"line":192,"column":12},"end":{"line":203,"column":13}},"49":{"start":{"line":199,"column":16},"end":{"line":199,"column":43}},"50":{"start":{"line":202,"column":16},"end":{"line":202,"column":98}},"51":{"start":{"line":205,"column":12},"end":{"line":205,"column":18}},"52":{"start":{"line":209,"column":12},"end":{"line":245,"column":13}},"53":{"start":{"line":212,"column":16},"end":{"line":212,"column":35}},"54":{"start":{"line":215,"column":16},"end":{"line":215,"column":44}},"55":{"start":{"line":217,"column":19},"end":{"line":245,"column":13}},"56":{"start":{"line":222,"column":16},"end":{"line":222,"column":47}},"57":{"start":{"line":224,"column":19},"end":{"line":245,"column":13}},"58":{"start":{"line":229,"column":16},"end":{"line":229,"column":35}},"59":{"start":{"line":232,"column":16},"end":{"line":232,"column":48}},"60":{"start":{"line":234,"column":19},"end":{"line":245,"column":13}},"61":{"start":{"line":241,"column":16},"end":{"line":241,"column":48}},"62":{"start":{"line":244,"column":16},"end":{"line":244,"column":98}},"63":{"start":{"line":247,"column":12},"end":{"line":247,"column":18}},"64":{"start":{"line":251,"column":12},"end":{"line":267,"column":13}},"65":{"start":{"line":255,"column":16},"end":{"line":255,"column":47}},"66":{"start":{"line":257,"column":19},"end":{"line":267,"column":13}},"67":{"start":{"line":263,"column":16},"end":{"line":263,"column":46}},"68":{"start":{"line":266,"column":16},"end":{"line":266,"column":98}},"69":{"start":{"line":269,"column":12},"end":{"line":269,"column":18}},"70":{"start":{"line":272,"column":12},"end":{"line":272,"column":101}},"71":{"start":{"line":273,"column":12},"end":{"line":273,"column":18}},"72":{"start":{"line":277,"column":4},"end":{"line":279,"column":5}},"73":{"start":{"line":278,"column":8},"end":{"line":278,"column":56}},"74":{"start":{"line":281,"column":4},"end":{"line":285,"column":5}},"75":{"start":{"line":282,"column":8},"end":{"line":282,"column":18}},"76":{"start":{"line":284,"column":8},"end":{"line":284,"column":25}},"77":{"start":{"line":289,"column":0},"end":{"line":312,"column":1}},"78":{"start":{"line":291,"column":4},"end":{"line":291,"column":23}},"79":{"start":{"line":293,"column":4},"end":{"line":293,"column":66}},"80":{"start":{"line":294,"column":4},"end":{"line":294,"column":50}},"81":{"start":{"line":295,"column":4},"end":{"line":295,"column":48}},"82":{"start":{"line":297,"column":4},"end":{"line":297,"column":110}},"83":{"start":{"line":299,"column":4},"end":{"line":308,"column":5}},"84":{"start":{"line":301,"column":12},"end":{"line":301,"column":67}},"85":{"start":{"line":303,"column":12},"end":{"line":303,"column":69}},"86":{"start":{"line":305,"column":12},"end":{"line":305,"column":57}},"87":{"start":{"line":307,"column":12},"end":{"line":307,"column":59}},"88":{"start":{"line":310,"column":4},"end":{"line":310,"column":41}},"89":{"start":{"line":315,"column":0},"end":{"line":341,"column":1}},"90":{"start":{"line":317,"column":4},"end":{"line":339,"column":11}},"91":{"start":{"line":319,"column":8},"end":{"line":335,"column":9}},"92":{"start":{"line":320,"column":10},"end":{"line":323,"column":12}},"93":{"start":{"line":324,"column":10},"end":{"line":326,"column":11}},"94":{"start":{"line":325,"column":12},"end":{"line":325,"column":40}},"95":{"start":{"line":327,"column":10},"end":{"line":329,"column":11}},"96":{"start":{"line":328,"column":12},"end":{"line":328,"column":50}},"97":{"start":{"line":330,"column":10},"end":{"line":332,"column":11}},"98":{"start":{"line":331,"column":12},"end":{"line":331,"column":36}},"99":{"start":{"line":334,"column":10},"end":{"line":334,"column":37}},"100":{"start":{"line":337,"column":8},"end":{"line":337,"column":30}},"101":{"start":{"line":343,"column":0},"end":{"line":371,"column":1}},"102":{"start":{"line":345,"column":4},"end":{"line":345,"column":157}},"103":{"start":{"line":346,"column":4},"end":{"line":346,"column":145}},"104":{"start":{"line":349,"column":4},"end":{"line":349,"column":70}},"105":{"start":{"line":352,"column":4},"end":{"line":355,"column":5}},"106":{"start":{"line":353,"column":8},"end":{"line":353,"column":44}},"107":{"start":{"line":354,"column":8},"end":{"line":354,"column":62}},"108":{"start":{"line":358,"column":4},"end":{"line":368,"column":5}},"109":{"start":{"line":363,"column":8},"end":{"line":363,"column":60}},"110":{"start":{"line":366,"column":8},"end":{"line":366,"column":81}},"111":{"start":{"line":367,"column":8},"end":{"line":367,"column":66}},"112":{"start":{"line":370,"column":4},"end":{"line":370,"column":16}},"113":{"start":{"line":373,"column":0},"end":{"line":382,"column":1}},"114":{"start":{"line":375,"column":4},"end":{"line":380,"column":5}},"115":{"start":{"line":377,"column":8},"end":{"line":377,"column":20}},"116":{"start":{"line":379,"column":8},"end":{"line":379,"column":21}},"117":{"start":{"line":384,"column":0},"end":{"line":392,"column":1}},"118":{"start":{"line":386,"column":4},"end":{"line":390,"column":5}},"119":{"start":{"line":387,"column":8},"end":{"line":387,"column":56}},"120":{"start":{"line":389,"column":8},"end":{"line":389,"column":20}},"121":{"start":{"line":394,"column":0},"end":{"line":415,"column":1}},"122":{"start":{"line":397,"column":4},"end":{"line":397,"column":40}},"123":{"start":{"line":400,"column":4},"end":{"line":400,"column":50}},"124":{"start":{"line":402,"column":4},"end":{"line":402,"column":34}},"125":{"start":{"line":402,"column":21},"end":{"line":402,"column":34}},"126":{"start":{"line":408,"column":4},"end":{"line":408,"column":83}},"127":{"start":{"line":410,"column":4},"end":{"line":410,"column":34}},"128":{"start":{"line":410,"column":21},"end":{"line":410,"column":34}},"129":{"start":{"line":413,"column":4},"end":{"line":413,"column":16}},"130":{"start":{"line":417,"column":0},"end":{"line":436,"column":1}},"131":{"start":{"line":419,"column":4},"end":{"line":419,"column":70}},"132":{"start":{"line":420,"column":4},"end":{"line":420,"column":95}},"133":{"start":{"line":422,"column":4},"end":{"line":424,"column":5}},"134":{"start":{"line":423,"column":8},"end":{"line":423,"column":20}},"135":{"start":{"line":427,"column":4},"end":{"line":427,"column":40}},"136":{"start":{"line":430,"column":4},"end":{"line":432,"column":5}},"137":{"start":{"line":431,"column":8},"end":{"line":431,"column":41}},"138":{"start":{"line":434,"column":4},"end":{"line":434,"column":16}},"139":{"start":{"line":438,"column":0},"end":{"line":462,"column":1}},"140":{"start":{"line":440,"column":4},"end":{"line":443,"column":6}},"141":{"start":{"line":446,"column":4},"end":{"line":448,"column":5}},"142":{"start":{"line":447,"column":8},"end":{"line":447,"column":71}},"143":{"start":{"line":450,"column":4},"end":{"line":450,"column":29}},"144":{"start":{"line":452,"column":4},"end":{"line":454,"column":5}},"145":{"start":{"line":453,"column":8},"end":{"line":453,"column":81}},"146":{"start":{"line":456,"column":4},"end":{"line":456,"column":34}},"147":{"start":{"line":458,"column":4},"end":{"line":458,"column":30}},"148":{"start":{"line":460,"column":4},"end":{"line":460,"column":19}}},"branchMap":{"1":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":4},"end":{"line":135,"column":4}},{"start":{"line":135,"column":4},"end":{"line":135,"column":4}}]},"2":{"line":135,"type":"binary-expr","locations":[{"start":{"line":135,"column":8},"end":{"line":135,"column":25}},{"start":{"line":136,"column":8},"end":{"line":136,"column":26}},{"start":{"line":137,"column":8},"end":{"line":137,"column":61}}]},"3":{"line":144,"type":"switch","locations":[{"start":{"line":146,"column":8},"end":{"line":173,"column":18}},{"start":{"line":175,"column":8},"end":{"line":188,"column":18}},{"start":{"line":190,"column":8},"end":{"line":205,"column":18}},{"start":{"line":207,"column":8},"end":{"line":247,"column":18}},{"start":{"line":249,"column":8},"end":{"line":269,"column":18}},{"start":{"line":271,"column":8},"end":{"line":273,"column":18}}]},"4":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":12},"end":{"line":148,"column":12}},{"start":{"line":148,"column":12},"end":{"line":148,"column":12}}]},"5":{"line":148,"type":"binary-expr","locations":[{"start":{"line":148,"column":16},"end":{"line":148,"column":33}},{"start":{"line":149,"column":16},"end":{"line":149,"column":44}}]},"6":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":19},"end":{"line":154,"column":19}},{"start":{"line":154,"column":19},"end":{"line":154,"column":19}}]},"7":{"line":154,"type":"binary-expr","locations":[{"start":{"line":154,"column":23},"end":{"line":154,"column":40}},{"start":{"line":155,"column":16},"end":{"line":155,"column":44}},{"start":{"line":156,"column":16},"end":{"line":156,"column":41}}]},"8":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":19},"end":{"line":161,"column":19}},{"start":{"line":161,"column":19},"end":{"line":161,"column":19}}]},"9":{"line":161,"type":"binary-expr","locations":[{"start":{"line":161,"column":23},"end":{"line":161,"column":40}},{"start":{"line":162,"column":22},"end":{"line":162,"column":50}},{"start":{"line":163,"column":22},"end":{"line":163,"column":47}},{"start":{"line":164,"column":22},"end":{"line":164,"column":50}}]},"10":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":12},"end":{"line":177,"column":12}},{"start":{"line":177,"column":12},"end":{"line":177,"column":12}}]},"11":{"line":177,"type":"binary-expr","locations":[{"start":{"line":177,"column":16},"end":{"line":177,"column":33}},{"start":{"line":178,"column":16},"end":{"line":178,"column":44}},{"start":{"line":179,"column":16},"end":{"line":179,"column":41}}]},"12":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":12},"end":{"line":192,"column":12}},{"start":{"line":192,"column":12},"end":{"line":192,"column":12}}]},"13":{"line":192,"type":"binary-expr","locations":[{"start":{"line":192,"column":16},"end":{"line":192,"column":33}},{"start":{"line":193,"column":22},"end":{"line":193,"column":50}},{"start":{"line":194,"column":22},"end":{"line":194,"column":47}},{"start":{"line":195,"column":22},"end":{"line":195,"column":50}},{"start":{"line":196,"column":22},"end":{"line":196,"column":47}}]},"14":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":12},"end":{"line":209,"column":12}},{"start":{"line":209,"column":12},"end":{"line":209,"column":12}}]},"15":{"line":209,"type":"binary-expr","locations":[{"start":{"line":209,"column":16},"end":{"line":209,"column":33}},{"start":{"line":210,"column":16},"end":{"line":210,"column":44}}]},"16":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":19},"end":{"line":217,"column":19}},{"start":{"line":217,"column":19},"end":{"line":217,"column":19}}]},"17":{"line":217,"type":"binary-expr","locations":[{"start":{"line":217,"column":23},"end":{"line":217,"column":40}},{"start":{"line":218,"column":22},"end":{"line":218,"column":50}},{"start":{"line":219,"column":22},"end":{"line":219,"column":47}}]},"18":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":19},"end":{"line":224,"column":19}},{"start":{"line":224,"column":19},"end":{"line":224,"column":19}}]},"19":{"line":224,"type":"binary-expr","locations":[{"start":{"line":224,"column":23},"end":{"line":224,"column":40}},{"start":{"line":225,"column":22},"end":{"line":225,"column":50}},{"start":{"line":226,"column":22},"end":{"line":226,"column":47}},{"start":{"line":227,"column":22},"end":{"line":227,"column":50}}]},"20":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":19},"end":{"line":234,"column":19}},{"start":{"line":234,"column":19},"end":{"line":234,"column":19}}]},"21":{"line":234,"type":"binary-expr","locations":[{"start":{"line":234,"column":23},"end":{"line":234,"column":40}},{"start":{"line":235,"column":22},"end":{"line":235,"column":50}},{"start":{"line":236,"column":22},"end":{"line":236,"column":47}},{"start":{"line":237,"column":22},"end":{"line":237,"column":50}},{"start":{"line":238,"column":22},"end":{"line":238,"column":47}}]},"22":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":12},"end":{"line":251,"column":12}},{"start":{"line":251,"column":12},"end":{"line":251,"column":12}}]},"23":{"line":251,"type":"binary-expr","locations":[{"start":{"line":251,"column":16},"end":{"line":251,"column":33}},{"start":{"line":252,"column":16},"end":{"line":252,"column":44}},{"start":{"line":253,"column":16},"end":{"line":253,"column":41}}]},"24":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":19},"end":{"line":257,"column":19}},{"start":{"line":257,"column":19},"end":{"line":257,"column":19}}]},"25":{"line":257,"type":"binary-expr","locations":[{"start":{"line":257,"column":23},"end":{"line":257,"column":40}},{"start":{"line":258,"column":22},"end":{"line":258,"column":50}},{"start":{"line":259,"column":22},"end":{"line":259,"column":47}},{"start":{"line":260,"column":22},"end":{"line":260,"column":50}},{"start":{"line":261,"column":22},"end":{"line":261,"column":47}}]},"26":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":4},"end":{"line":277,"column":4}},{"start":{"line":277,"column":4},"end":{"line":277,"column":4}}]},"27":{"line":277,"type":"binary-expr","locations":[{"start":{"line":277,"column":8},"end":{"line":277,"column":36}},{"start":{"line":277,"column":40},"end":{"line":277,"column":52}}]},"28":{"line":281,"type":"if","locations":[{"start":{"line":281,"column":4},"end":{"line":281,"column":4}},{"start":{"line":281,"column":4},"end":{"line":281,"column":4}}]},"29":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":16},"end":{"line":297,"column":33}},{"start":{"line":297,"column":37},"end":{"line":297,"column":54}}]},"30":{"line":299,"type":"switch","locations":[{"start":{"line":300,"column":8},"end":{"line":301,"column":67}},{"start":{"line":302,"column":8},"end":{"line":303,"column":69}},{"start":{"line":304,"column":8},"end":{"line":305,"column":57}},{"start":{"line":306,"column":8},"end":{"line":307,"column":59}}]},"31":{"line":319,"type":"if","locations":[{"start":{"line":319,"column":8},"end":{"line":319,"column":8}},{"start":{"line":319,"column":8},"end":{"line":319,"column":8}}]},"32":{"line":319,"type":"binary-expr","locations":[{"start":{"line":319,"column":12},"end":{"line":319,"column":39}},{"start":{"line":319,"column":44},"end":{"line":319,"column":57}},{"start":{"line":319,"column":61},"end":{"line":319,"column":79}}]},"33":{"line":322,"type":"cond-expr","locations":[{"start":{"line":322,"column":34},"end":{"line":322,"column":41}},{"start":{"line":322,"column":44},"end":{"line":322,"column":56}}]},"34":{"line":324,"type":"if","locations":[{"start":{"line":324,"column":10},"end":{"line":324,"column":10}},{"start":{"line":324,"column":10},"end":{"line":324,"column":10}}]},"35":{"line":327,"type":"if","locations":[{"start":{"line":327,"column":10},"end":{"line":327,"column":10}},{"start":{"line":327,"column":10},"end":{"line":327,"column":10}}]},"36":{"line":330,"type":"if","locations":[{"start":{"line":330,"column":10},"end":{"line":330,"column":10}},{"start":{"line":330,"column":10},"end":{"line":330,"column":10}}]},"37":{"line":345,"type":"binary-expr","locations":[{"start":{"line":345,"column":16},"end":{"line":345,"column":55}},{"start":{"line":345,"column":59},"end":{"line":345,"column":87}}]},"38":{"line":346,"type":"binary-expr","locations":[{"start":{"line":346,"column":16},"end":{"line":346,"column":51}},{"start":{"line":346,"column":55},"end":{"line":346,"column":79}}]},"39":{"line":352,"type":"if","locations":[{"start":{"line":352,"column":4},"end":{"line":352,"column":4}},{"start":{"line":352,"column":4},"end":{"line":352,"column":4}}]},"40":{"line":358,"type":"if","locations":[{"start":{"line":358,"column":4},"end":{"line":358,"column":4}},{"start":{"line":358,"column":4},"end":{"line":358,"column":4}}]},"41":{"line":358,"type":"binary-expr","locations":[{"start":{"line":358,"column":8},"end":{"line":358,"column":31}},{"start":{"line":359,"column":8},"end":{"line":359,"column":35}},{"start":{"line":360,"column":8},"end":{"line":360,"column":31}},{"start":{"line":361,"column":8},"end":{"line":361,"column":67}}]},"42":{"line":375,"type":"if","locations":[{"start":{"line":375,"column":4},"end":{"line":375,"column":4}},{"start":{"line":375,"column":4},"end":{"line":375,"column":4}}]},"43":{"line":375,"type":"binary-expr","locations":[{"start":{"line":375,"column":8},"end":{"line":375,"column":35}},{"start":{"line":376,"column":8},"end":{"line":376,"column":58}}]},"44":{"line":386,"type":"if","locations":[{"start":{"line":386,"column":4},"end":{"line":386,"column":4}},{"start":{"line":386,"column":4},"end":{"line":386,"column":4}}]},"45":{"line":402,"type":"if","locations":[{"start":{"line":402,"column":4},"end":{"line":402,"column":4}},{"start":{"line":402,"column":4},"end":{"line":402,"column":4}}]},"46":{"line":408,"type":"binary-expr","locations":[{"start":{"line":408,"column":22},"end":{"line":408,"column":50}},{"start":{"line":408,"column":55},"end":{"line":408,"column":82}}]},"47":{"line":410,"type":"if","locations":[{"start":{"line":410,"column":4},"end":{"line":410,"column":4}},{"start":{"line":410,"column":4},"end":{"line":410,"column":4}}]},"48":{"line":420,"type":"binary-expr","locations":[{"start":{"line":420,"column":16},"end":{"line":420,"column":23}},{"start":{"line":420,"column":27},"end":{"line":420,"column":45}}]},"49":{"line":422,"type":"if","locations":[{"start":{"line":422,"column":4},"end":{"line":422,"column":4}},{"start":{"line":422,"column":4},"end":{"line":422,"column":4}}]},"50":{"line":430,"type":"if","locations":[{"start":{"line":430,"column":4},"end":{"line":430,"column":4}},{"start":{"line":430,"column":4},"end":{"line":430,"column":4}}]},"51":{"line":446,"type":"if","locations":[{"start":{"line":446,"column":4},"end":{"line":446,"column":4}},{"start":{"line":446,"column":4},"end":{"line":446,"column":4}}]},"52":{"line":446,"type":"binary-expr","locations":[{"start":{"line":446,"column":8},"end":{"line":446,"column":25}},{"start":{"line":446,"column":29},"end":{"line":446,"column":51}},{"start":{"line":446,"column":55},"end":{"line":446,"column":93}}]},"53":{"line":452,"type":"if","locations":[{"start":{"line":452,"column":4},"end":{"line":452,"column":4}},{"start":{"line":452,"column":4},"end":{"line":452,"column":4}}]},"54":{"line":452,"type":"binary-expr","locations":[{"start":{"line":452,"column":8},"end":{"line":452,"column":30}},{"start":{"line":452,"column":34},"end":{"line":452,"column":56}},{"start":{"line":452,"column":60},"end":{"line":452,"column":108}}]}},"code":["/**"," * Module dependencies"," */","","var _ = require('lodash');","var Call = require('call');","var Hoek = require('hoek');","// var pluralize = require('pluralize');","var BedWetters = {","    create  : require('./actions/create'),","    find    : require('./actions/find'),","    findone : require('./actions/findOne'),","    update  : require('./actions/update'),","    destroy : require('./actions/destroy'),","    populate: require('./actions/populate'),","    add     : require('./actions/add'),","    remove  : require('./actions/remove'),","}","","","var internals = {};","","internals.defaults = {","    ","    populate: false,","    prefix: '',","    createdLocation: false,","    //pluralize: false, TODO: support on opts.associationAttr and opts.model","    ","    actAsUser: false,","    userUrlPrefix: 'user', // this is in the url in lieu of /users/{id}","    userModel: 'users', // since it's not in the url","    userIdProperty: 'id', // on auth credentials","    ","    setOwner: false,","    requireOwner: false,","    ownerAttr: 'owner',","    ownerAttrs: {},","    childOwnerAttr: 'owner',","    childOwnerAttrs: {},","","    // Setting a deleted flag rather than destroying","    deletedFlag: false, // destroy by default","    deletedAttr: 'deleted',","    deletedValue: 1,","    ","    // Change pk field","    pkAttr: false,","    childPkAttr: false,","    ","    // Omit, later also pick, etc.","    omit: [],","    ","    // A place for hooks","    hooks: {","        options: _.identity","    },","    ","    // A place for private info to get passed around","    _private: {","        actAsUserModifiedPath: false,","        count: false","    }","    ","}","","/**"," * BedWet"," *"," * (see http://nodejs.org/api/documentation.html#documentation_stability_index)"," */","","exports.register = function(server, options, next) {","","    server.dependency('dogwater');","    ","    server.handler('bedwetter', function(route, handlerOptions) {","        ","        // handlerOptions come user-defined in route definition","        // nothing should override these!","        ","        var Dogwater = server.plugins.dogwater;","    ","        var thisRouteOpts = _.cloneDeep(internals.defaults);","        ","        // Plugin-level user-defined options","        _.merge(thisRouteOpts, options)","        ","        // Route-level user-defined options","        _.merge(thisRouteOpts, handlerOptions);","        ","        // Route-level info (should not override plugin options & handler options)","        internals.setOptionsFromRouteInfo(route, thisRouteOpts);","        ","        // Set associations now that the model is locked-down","        // TODO: figure out why these don't stick when model grabbed from parseModel","        var Model = Dogwater[thisRouteOpts.model];","        ","        Hoek.assert(Model, 'Model `' + thisRouteOpts.model + '` must exist to build route.');","        ","        // Don't overwrite associations if they've been set as an option for some reason","        _.defaults(thisRouteOpts, {associations: internals.getAssociationsFromModel(Model)});","        ","        thisRouteOpts = internals.normalizeOptions(thisRouteOpts);","        ","        // Here's our little bed wetter!","        var bedWetter = internals.determineBedWetter(route, thisRouteOpts);","","        return bedWetter(route, thisRouteOpts);","        ","    });","    ","    next();","};","","exports.register.attributes = {","    pkg: require('../package.json')","};","","","internals.Router = new Call.Router({});","","internals.determineBedWetter = function(route, thisRouteOpts) {","    ","    var method  = route.method;","    var path    = route.path;","    ","    path = internals.normalizePath(path, thisRouteOpts);","    ","    var pathInfo = internals.Router.analyze(path);","    var pathSegments = pathInfo.segments.length;","    var err;","    ","    // Account for `update` allowing POST or PATCH","    if (_.isArray(method) &&","        method.length == 2 &&","        _.intersection(method, ['post', 'patch']).length == 2) {","        ","        method = 'patch';","    }","    ","    var countIsOkay = false;","    var bedwetter;","    switch (method) {","        ","        case 'post':","            ","            if (pathSegments == 1 &&","                pathInfo.segments[0].literal) {         // model","                ","                // Create","                bedwetter = BedWetters.create;","            ","            } else if (pathSegments == 2 &&","                pathInfo.segments[0].literal &&         // model","                pathInfo.segments[1].name) {            // record","                ","                // Patched update","                bedwetter = BedWetters.update;","            ","            } else if (pathSegments == 3 &&","                      pathInfo.segments[0].literal &&   // model","                      pathInfo.segments[1].name &&      // record","                      pathInfo.segments[2].literal) {   // association","                ","                // Create and add to relation","                bedwetter = BedWetters.add;","            ","            } else {","                err = new Error('This ' + method + ' route does not match a BedWetting pattern.');","            }","            ","            break;","        ","        case 'patch':","            ","            if (pathSegments == 2 &&","                pathInfo.segments[0].literal &&   // model","                pathInfo.segments[1].name) {      // record","                ","                // Patched update","                bedwetter = BedWetters.update;","            ","            } else {","                err = new Error('This ' + method + ' route does not match a BedWetting pattern.');","            }","            ","            break;","        ","        case 'put':","            ","            if (pathSegments == 4 &&","                      pathInfo.segments[0].literal &&   // model","                      pathInfo.segments[1].name &&      // record","                      pathInfo.segments[2].literal &&   // association","                      pathInfo.segments[3].name) {      // record_to_add","                ","                // Add to a relation","                bedwetter = BedWetters.add;","            ","            } else {","                err = new Error('This ' + method + ' route does not match a BedWetting pattern.');","            }","            ","            break;","            ","        case 'get':","            ","            if (pathSegments == 1 &&","                pathInfo.segments[0].literal) {         // model","                ","                countIsOkay = true;","                ","                // Find with criteria","                bedwetter = BedWetters.find;","            ","            } else if (pathSegments == 2 &&","                      pathInfo.segments[0].literal &&   // model","                      pathInfo.segments[1].name) {      // record","                ","                // Find one by id","                bedwetter = BedWetters.findone;","            ","            } else if (pathSegments == 3 &&","                      pathInfo.segments[0].literal &&   // model","                      pathInfo.segments[1].name &&      // record","                      pathInfo.segments[2].literal) {   // association","                ","                countIsOkay = true;","                ","                // Get associated records","                bedwetter = BedWetters.populate;","            ","            } else if (pathSegments == 4 &&","                      pathInfo.segments[0].literal &&   // model","                      pathInfo.segments[1].name &&      // record","                      pathInfo.segments[2].literal &&   // association","                      pathInfo.segments[3].name) {      // record_to_check","                ","                // Check for an association between records","                bedwetter = BedWetters.populate;","            ","            } else {","                err = new Error('This ' + method + ' route does not match a BedWetting pattern.');","            }","            ","            break;","        ","        case 'delete':","            ","            if (pathSegments == 2 &&","                pathInfo.segments[0].literal &&   // model","                pathInfo.segments[1].name) {      // record","                ","                bedwetter = BedWetters.destroy;","            ","            } else if (pathSegments == 4 &&","                      pathInfo.segments[0].literal &&   // model","                      pathInfo.segments[1].name &&      // record","                      pathInfo.segments[2].literal &&   // association","                      pathInfo.segments[3].name) {      // record_to_remove","                ","                bedwetter = BedWetters.remove;","            ","            } else {","                err = new Error('This ' + method + ' route does not match a BedWetting pattern.');","            }","            ","            break;","        ","        default:","            err = new Error('Method isn\\'t a BedWetter.  Must be POST, GET, DELETE, PUT, or PATCH.');","            break;","    }","    ","    // Only allow counting on find and array populate","    if (thisRouteOpts._private.count && !countIsOkay) {","        err = new Error('This bedwetter can\\'t count!');","    }","    ","    if (err) {","        throw err;","    } else {","        return bedwetter;","    }","    ","}","","internals.setOptionsFromRouteInfo = function(route, thisRouteOpts) {","    ","    var routeInfo = {};","    ","    var path = internals.normalizePath(route.path, thisRouteOpts);","    var pathInfo = internals.Router.analyze(path);","    var pathSegments = pathInfo.segments.length;","    ","    Hoek.assert(1 <= pathSegments && pathSegments <= 4, 'Number of path segments should be between 1 and 4.');","    ","    switch (pathSegments) {","        case 4:","            routeInfo.associatedPkName = pathInfo.segments[3].name;","        case 3:","            routeInfo.associationAttr = pathInfo.segments[2].literal;","        case 2:","            routeInfo.pkName = pathInfo.segments[1].name;","        case 1:","            routeInfo.model = pathInfo.segments[0].literal;","    }","    ","    _.defaults(thisRouteOpts, routeInfo);","    ","}","","// See https://github.com/balderdashy/sails/blob/master/lib/hooks/orm/build-orm.js#L65 [waterline v0.10.11]","internals.getAssociationsFromModel = function(thisModel) {","    ","    return _.reduce(thisModel.attributes, function (associatedWith, attrDef, attrName) {","        ","        if (typeof attrDef === 'object' && (attrDef.model || attrDef.collection)) {","          var assoc = {","            alias: attrName,","            type: attrDef.model ? 'model' : 'collection'","          };","          if (attrDef.model) {","            assoc.model = attrDef.model;","          }","          if (attrDef.collection) {","            assoc.collection = attrDef.collection;","          }","          if (attrDef.via) {","            assoc.via = attrDef.via;","          }","","          associatedWith.push(assoc);","        }","        ","        return associatedWith;","    ","    }, []);","","}","","internals.normalizePath = function(path, thisRouteOpts) {","    ","    Hoek.assert(_.isString(thisRouteOpts.userUrlPrefix) || !thisRouteOpts.userUrlPrefix, 'Option userUrlPrefix should only have a string or a falsy value.');","    Hoek.assert(_.isString(thisRouteOpts.userModel) || !thisRouteOpts.userModel, 'Option userModel should only have a string or a falsy value.');","    ","    // Deal with prefix option","    path = internals.removePrefixFromPath(path, thisRouteOpts.prefix);","    ","    // TODO: adjust bedwetters!","    if (internals.pathEndsWith(path, '/count')) {","        thisRouteOpts._private.count = true;","        path = internals.removeSuffixFromPath(path, '/count');","    }","    ","    // Deal with user creds options.","    if (thisRouteOpts.actAsUser &&","        thisRouteOpts.userUrlPrefix &&","        thisRouteOpts.userModel &&","        internals.pathBeginsWith(path, thisRouteOpts.userUrlPrefix)) {","        ","        thisRouteOpts._private.actAsUserModifiedPath = true;","        ","        // Transform path to seem like it's of the form /users/{userId}...","        path = internals.removePrefixFromPath(path, thisRouteOpts.userUrlPrefix);","        path = '/' + thisRouteOpts.userModel + '/{userId}' + path;","    }","    ","    return path;","}","","internals.pathEndsWith = function(path, needle) {","    ","    if (path.indexOf(needle) !== -1 &&","        path.indexOf(needle) === path.length-needle.length) {","        return true;","    } else {","        return false;","    }","    ","}","","internals.removeSuffixFromPath = function(path, suffix) {","    ","    if (internals.pathEndsWith(path, suffix)) {","        return path.slice(0, path.length-suffix.length);","    } else {","        return path;","    }","    ","}","","internals.pathBeginsWith = function(path, needle) {","    ","    // Remove trailing slashes from needle","    needle = needle.replace(/\\/+$/, '');","    ","    // path begins with needle","    var softBegins = (path.indexOf(needle) === 0);","    ","    if (!softBegins) return false;","    ","    // Assuming path begins with needle,","    // make sure it takes up enitre query parts.","    // We check this by seeing if removing needle would leave an empty string (they have equal lengths)","    // or if removing needle would leave a '/' as the first character in the newly constructed path.","    var hardBegins = (path.length == needle.length) || path[needle.length] === '/';","    ","    if (!hardBegins) return false;","    ","    // Passed the tests","    return true;","    ","}","","internals.removePrefixFromPath = function(path, prefix) {","    ","    Hoek.assert(_.isString(path), 'Path parameter should be a string')","    Hoek.assert(!prefix || _.isString(prefix), 'Prefix parameter should be a string or falsy.')","    ","    if (!prefix) {","        return path;","    }","    ","    // Remove trailing slashes from prefix","    prefix = prefix.replace(/\\/+$/, '');","    ","    // If the path begins with the prefix, chop it off!","    if (path.indexOf(prefix) === 0) {","        path = path.slice(prefix.length);","    }","    ","    return path;","    ","}","","internals.normalizeOptions = function(options) {","    ","    var partial = {","        ownerAttrs: {},","        childOwnerAttrs: {}","    };","    ","    // Currently just map *ownerAttr strings to *ownerAttrs objects, if not already set.","    if (options.ownerAttr && options.userIdProperty && !options.ownerAttrs[options.ownerAttr]) {","        partial.ownerAttrs[options.ownerAttr] = options.userIdProperty;","    }","    ","    delete options.ownerAttr;","    ","    if (options.childOwnerAttr && options.userIdProperty && !options.childOwnerAttrs[options.childOwnerAttr]) {","        partial.childOwnerAttrs[options.childOwnerAttr] = options.userIdProperty;","    }","    ","    delete options.childOwnerAttr;","    ","    _.merge(options, partial);","    ","    return options;","    ","}","",""],"l":{"5":1,"6":1,"7":1,"9":1,"21":1,"23":1,"73":1,"75":0,"77":0,"82":0,"84":0,"87":0,"90":0,"93":0,"97":0,"99":0,"102":0,"104":0,"107":0,"109":0,"113":0,"116":1,"121":1,"123":1,"125":0,"126":0,"128":0,"130":0,"131":0,"132":0,"135":0,"139":0,"142":0,"143":0,"144":0,"148":0,"152":0,"154":0,"159":0,"161":0,"167":0,"170":0,"173":0,"177":0,"182":0,"185":0,"188":0,"192":0,"199":0,"202":0,"205":0,"209":0,"212":0,"215":0,"217":0,"222":0,"224":0,"229":0,"232":0,"234":0,"241":0,"244":0,"247":0,"251":0,"255":0,"257":0,"263":0,"266":0,"269":0,"272":0,"273":0,"277":0,"278":0,"281":0,"282":0,"284":0,"289":1,"291":0,"293":0,"294":0,"295":0,"297":0,"299":0,"301":0,"303":0,"305":0,"307":0,"310":0,"315":1,"317":0,"319":0,"320":0,"324":0,"325":0,"327":0,"328":0,"330":0,"331":0,"334":0,"337":0,"343":1,"345":0,"346":0,"349":0,"352":0,"353":0,"354":0,"358":0,"363":0,"366":0,"367":0,"370":0,"373":1,"375":0,"377":0,"379":0,"384":1,"386":0,"387":0,"389":0,"394":1,"397":0,"400":0,"402":0,"408":0,"410":0,"413":0,"417":1,"419":0,"420":0,"422":0,"423":0,"427":0,"430":0,"431":0,"434":0,"438":1,"440":0,"446":0,"447":0,"450":0,"452":0,"453":0,"456":0,"458":0,"460":0}},"/home/travis/build/npmtest/node-npmtest-bedwetter/node_modules/bedwetter/lib/actions/create.js":{"path":"/home/travis/build/npmtest/node-npmtest-bedwetter/node_modules/bedwetter/lib/actions/create.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"createRecord","line":19,"loc":{"start":{"line":19,"column":17},"end":{"line":19,"column":60}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":8},"end":{"line":21,"column":33}}},"3":{"name":"created","line":40,"loc":{"start":{"line":40,"column":26},"end":{"line":40,"column":62}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":27}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":43}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":44}},"4":{"start":{"line":19,"column":0},"end":{"line":57,"column":2}},"5":{"start":{"line":21,"column":1},"end":{"line":55,"column":2}},"6":{"start":{"line":24,"column":2},"end":{"line":24,"column":67}},"7":{"start":{"line":26,"column":2},"end":{"line":29,"column":4}},"8":{"start":{"line":31,"column":2},"end":{"line":31,"column":62}},"9":{"start":{"line":33,"column":2},"end":{"line":33,"column":38}},"10":{"start":{"line":37,"column":2},"end":{"line":37,"column":38}},"11":{"start":{"line":40,"column":2},"end":{"line":54,"column":5}},"12":{"start":{"line":45,"column":3},"end":{"line":45,"column":39}},"13":{"start":{"line":45,"column":12},"end":{"line":45,"column":39}},"14":{"start":{"line":47,"column":3},"end":{"line":47,"column":64}},"15":{"start":{"line":50,"column":3},"end":{"line":50,"column":38}},"16":{"start":{"line":53,"column":3},"end":{"line":53,"column":40}}},"branchMap":{"1":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":3},"end":{"line":45,"column":3}},{"start":{"line":45,"column":3},"end":{"line":45,"column":3}}]}},"code":["/**"," * Module dependencies"," */","var Boom = require('boom');","var WL2Boom = require('waterline-to-boom');","var GeneralUtil = require('../generalUtil');","","/**"," * Create Record"," *"," * post /:modelIdentity"," *"," * An API call to find and return a single model instance from the data adapter"," * using the specified criteria.  If an id was specified, just the instance with"," * that unique id will be returned."," * "," */","","module.exports = function createRecord (route, origOptions) {","\t","\treturn function(request, reply) {","\t\t","\t        // Transform the original options using options hook","\t\tvar options = GeneralUtil.applyOptionsHook(request, origOptions);","\t\t","\t\tvar RequestState = request.plugins.bedwetter = {","\t\t\taction: 'create',","\t\t\toptions: options","\t\t};","\t\t","\t\tvar actionUtil = require('../actionUtil')(request, options);","\t\t","\t\tvar Model = actionUtil.parseModel();","\t\t","\t\t// Create data object (monolithic combination of all parameters)","\t\t// Omit the blacklisted params (like JSONP callback param, etc.)","\t\tvar data = actionUtil.parseValues();","\t\t","\t\t// Create new instance of model using data from params","\t\tModel.create(data).exec(function created (err, newInstance) {","\t\t\t","\t\t\t// Differentiate between waterline-originated validation errors","\t\t\t// and serious underlying issues. Respond with badRequest if a","\t\t\t// validation error is encountered, w/ validation info.","\t\t\tif (err) return reply(WL2Boom(err));","\t\t\t","\t\t\tvar location = actionUtil.getCreatedLocation(newInstance.id);","\t\t\t","\t\t\t// Omit fields if necessary","\t\t\tactionUtil.omitFields(newInstance);","\t\t\t","\t\t\t// \"HTTP 201 / Created\"","\t\t\treply(newInstance).created(location);","\t\t});","\t}","  ","};",""],"l":{"4":1,"5":1,"6":1,"19":1,"21":0,"24":0,"26":0,"31":0,"33":0,"37":0,"40":0,"45":0,"47":0,"50":0,"53":0}},"/home/travis/build/npmtest/node-npmtest-bedwetter/node_modules/bedwetter/lib/generalUtil.js":{"path":"/home/travis/build/npmtest/node-npmtest-bedwetter/node_modules/bedwetter/lib/generalUtil.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":22},"end":{"line":7,"column":53}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":16},"end":{"line":20,"column":29}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":26}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":19}},"3":{"start":{"line":5,"column":0},"end":{"line":31,"column":1}},"4":{"start":{"line":9,"column":8},"end":{"line":15,"column":9}},"5":{"start":{"line":11,"column":12},"end":{"line":11,"column":80}},"6":{"start":{"line":14,"column":12},"end":{"line":14,"column":44}},"7":{"start":{"line":22,"column":8},"end":{"line":28,"column":9}},"8":{"start":{"line":24,"column":12},"end":{"line":24,"column":50}},"9":{"start":{"line":27,"column":12},"end":{"line":27,"column":30}}},"branchMap":{"1":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":8},"end":{"line":9,"column":8}},{"start":{"line":9,"column":8},"end":{"line":9,"column":8}}]},"2":{"line":9,"type":"binary-expr","locations":[{"start":{"line":9,"column":12},"end":{"line":9,"column":29}},{"start":{"line":9,"column":33},"end":{"line":9,"column":80}}]},"3":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":22,"column":8}},{"start":{"line":22,"column":8},"end":{"line":22,"column":8}}]},"4":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":12},"end":{"line":22,"column":26}},{"start":{"line":22,"column":30},"end":{"line":22,"column":52}}]}},"code":["var _ = require('lodash');","","var internals = {};","","module.exports = {","    ","    applyOptionsHook: function(request, origOptions) {","        ","        if (origOptions.hooks && typeof origOptions.hooks.options === \"function\") {","            ","            return origOptions.hooks.options(_.cloneDeep(origOptions), request);","        } else {","            ","            return _.cloneDeep(origOptions);","        }","        ","    },","    ","    // This pk comes in the form of waterline criteria: object, string, or int","    pkToString: function(pk) {","        ","        if (_.isObject(pk) && Object.keys(pk).length) {","            ","            return String(pk[Object.keys(pk)[0]]);","        } else {","            ","            return String(pk);","        }","    }","    ","}",""],"l":{"1":1,"3":1,"5":1,"9":0,"11":0,"14":0,"22":0,"24":0,"27":0}},"/home/travis/build/npmtest/node-npmtest-bedwetter/node_modules/bedwetter/lib/actions/find.js":{"path":"/home/travis/build/npmtest/node-npmtest-bedwetter/node_modules/bedwetter/lib/actions/find.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"findRecords","line":26,"loc":{"start":{"line":26,"column":17},"end":{"line":26,"column":59}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":9},"end":{"line":28,"column":34}}},"3":{"name":"found","line":63,"loc":{"start":{"line":63,"column":15},"end":{"line":63,"column":52}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":34}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":47}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":36}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":44}},"5":{"start":{"line":26,"column":0},"end":{"line":79,"column":2}},"6":{"start":{"line":28,"column":2},"end":{"line":78,"column":3}},"7":{"start":{"line":31,"column":4},"end":{"line":31,"column":69}},"8":{"start":{"line":33,"column":4},"end":{"line":36,"column":6}},"9":{"start":{"line":38,"column":4},"end":{"line":38,"column":65}},"10":{"start":{"line":41,"column":4},"end":{"line":41,"column":40}},"11":{"start":{"line":44,"column":4},"end":{"line":44,"column":14}},"12":{"start":{"line":45,"column":4},"end":{"line":61,"column":5}},"13":{"start":{"line":47,"column":6},"end":{"line":48,"column":43}},"14":{"start":{"line":52,"column":6},"end":{"line":56,"column":38}},"15":{"start":{"line":59,"column":6},"end":{"line":59,"column":45}},"16":{"start":{"line":63,"column":4},"end":{"line":76,"column":7}},"17":{"start":{"line":65,"column":6},"end":{"line":65,"column":42}},"18":{"start":{"line":65,"column":15},"end":{"line":65,"column":42}},"19":{"start":{"line":68,"column":6},"end":{"line":71,"column":7}},"20":{"start":{"line":70,"column":8},"end":{"line":70,"column":47}},"21":{"start":{"line":74,"column":6},"end":{"line":74,"column":36}}},"branchMap":{"1":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":45,"column":4}},{"start":{"line":45,"column":4},"end":{"line":45,"column":4}}]},"2":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":6},"end":{"line":65,"column":6}},{"start":{"line":65,"column":6},"end":{"line":65,"column":6}}]},"3":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":6},"end":{"line":68,"column":6}},{"start":{"line":68,"column":6},"end":{"line":68,"column":6}}]}},"code":["/**"," * Module dependencies"," */","var Boom        = require('boom');","var WL2Boom     = require('waterline-to-boom');","var _           = require('lodash');","var GeneralUtil = require('../generalUtil');","","/**"," * Find Records"," *"," *  get   /:modelIdentity"," *"," * An API call to find and return model instances from the data adapter"," * using the specified criteria.  If an id was specified, just the instance"," * with that unique id will be returned."," *"," * Optional:"," * @param {Object} where       - the find criteria (passed directly to the ORM)"," * @param {Integer} limit      - the maximum number of records to send back (useful for pagination)"," * @param {Integer} skip       - the number of records to skip (useful for pagination)"," * @param {String} sort        - the order of returned records, e.g. `name ASC` or `age DESC`"," * "," */","","module.exports = function findRecords (route, origOptions) {","  ","  return function(request, reply) {","    ","    // Transform the original options using options hook","    var options = GeneralUtil.applyOptionsHook(request, origOptions);","    ","    var RequestState = request.plugins.bedwetter = {","      action: 'find',","      options: options","    };","    ","    var actionUtil  = require('../actionUtil')(request, options);","    ","    // Look up the model","    var Model = actionUtil.parseModel();","    ","    // Lookup for records that match the specified criteria.  Are we just counting?","    var query;","    if (options._private.count) {","      ","      query = Model.count()","      .where( actionUtil.parseCriteria() );","      ","    } else {","      ","      query = Model.find()","      .where( actionUtil.parseCriteria() )","      .limit( actionUtil.parseLimit() )","      .skip( actionUtil.parseSkip() )","      .sort( actionUtil.parseSort() );","      ","      // TODO: .populateEach(req.options);","      query = actionUtil.populateEach(query);","      ","    }","    ","    query.exec(function found(err, matchingRecords) {","      ","      if (err) return reply(WL2Boom(err));","      ","      // Omit fields if necessary","      if (!options._private.count) {","        ","        actionUtil.omitFields(matchingRecords);","      }","      ","      // If count is set, this this an integer.  Otherwise, it's an array of matching records.","      return reply(matchingRecords);","      ","    });","    ","  }","};",""],"l":{"4":1,"5":1,"6":1,"7":1,"26":1,"28":0,"31":0,"33":0,"38":0,"41":0,"44":0,"45":0,"47":0,"52":0,"59":0,"63":0,"65":0,"68":0,"70":0,"74":0}},"/home/travis/build/npmtest/node-npmtest-bedwetter/node_modules/bedwetter/lib/actions/findOne.js":{"path":"/home/travis/build/npmtest/node-npmtest-bedwetter/node_modules/bedwetter/lib/actions/findOne.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"findOneRecord","line":18,"loc":{"start":{"line":18,"column":17},"end":{"line":18,"column":61}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":9},"end":{"line":20,"column":34}}},"3":{"name":"found","line":47,"loc":{"start":{"line":47,"column":15},"end":{"line":47,"column":51}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":27}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":43}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":44}},"4":{"start":{"line":18,"column":0},"end":{"line":70,"column":1}},"5":{"start":{"line":20,"column":2},"end":{"line":68,"column":3}},"6":{"start":{"line":23,"column":4},"end":{"line":23,"column":69}},"7":{"start":{"line":25,"column":4},"end":{"line":28,"column":6}},"8":{"start":{"line":30,"column":4},"end":{"line":30,"column":64}},"9":{"start":{"line":32,"column":4},"end":{"line":32,"column":40}},"10":{"start":{"line":35,"column":4},"end":{"line":35,"column":11}},"11":{"start":{"line":37,"column":4},"end":{"line":41,"column":5}},"12":{"start":{"line":38,"column":6},"end":{"line":38,"column":34}},"13":{"start":{"line":40,"column":6},"end":{"line":40,"column":33}},"14":{"start":{"line":43,"column":4},"end":{"line":43,"column":71}},"15":{"start":{"line":45,"column":4},"end":{"line":45,"column":43}},"16":{"start":{"line":47,"column":4},"end":{"line":66,"column":7}},"17":{"start":{"line":49,"column":6},"end":{"line":50,"column":35}},"18":{"start":{"line":50,"column":8},"end":{"line":50,"column":35}},"19":{"start":{"line":52,"column":6},"end":{"line":53,"column":80}},"20":{"start":{"line":53,"column":8},"end":{"line":53,"column":80}},"21":{"start":{"line":55,"column":6},"end":{"line":56,"column":42}},"22":{"start":{"line":56,"column":8},"end":{"line":56,"column":42}},"23":{"start":{"line":59,"column":6},"end":{"line":59,"column":50}},"24":{"start":{"line":62,"column":6},"end":{"line":62,"column":44}},"25":{"start":{"line":64,"column":6},"end":{"line":64,"column":28}}},"branchMap":{"1":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":6},"end":{"line":49,"column":6}},{"start":{"line":49,"column":6},"end":{"line":49,"column":6}}]},"2":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":6},"end":{"line":52,"column":6}},{"start":{"line":52,"column":6},"end":{"line":52,"column":6}}]},"3":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":6},"end":{"line":55,"column":6}},{"start":{"line":55,"column":6},"end":{"line":55,"column":6}}]}},"code":["/**"," * Module dependencies"," */","var Boom = require('boom');","var WL2Boom = require('waterline-to-boom');","var GeneralUtil = require('../generalUtil');","","/**"," * Find One Record"," *"," * get /:modelIdentity/:id"," *"," * An API call to find and return a single model instance from the data adapter"," * using the specified id."," *"," */","","module.exports = function findOneRecord (route, origOptions) {","  ","  return function(request, reply) {","    ","    // Transform the original options using options hook","    var options = GeneralUtil.applyOptionsHook(request, origOptions);","    ","    var RequestState = request.plugins.bedwetter = {","      action: 'findone',","      options: options","    };","    ","    var actionUtil = require('../actionUtil')(request, options);","    ","    var Model = actionUtil.parseModel();","    ","    // The primary key of the record","    var pk;","    ","    try {","      pk = actionUtil.requirePk();","    } catch(e) {","      return reply(Boom.wrap(e)); ","    }","    ","    var query = Model.findOne(pk).where(actionUtil.checkDeletedFlag());","    ","    query = actionUtil.populateEach(query);","    ","    query.exec(function found(err, matchingRecord) {","      ","      if (err)","        return reply(WL2Boom(err));","      ","      if (!matchingRecord)","        return reply(Boom.notFound('No record found with the specified `id`.'));","      ","      if (!actionUtil.validOwnership(matchingRecord, false))","        return reply(Boom.unauthorized());","      ","      // Share primary record","      RequestState.primaryRecord = matchingRecord;","      ","      // Omit fields if necessary","      actionUtil.omitFields(matchingRecord);","      ","      reply(matchingRecord);","      ","    });","    ","  }","  ","}",""],"l":{"4":1,"5":1,"6":1,"18":1,"20":0,"23":0,"25":0,"30":0,"32":0,"35":0,"37":0,"38":0,"40":0,"43":0,"45":0,"47":0,"49":0,"50":0,"52":0,"53":0,"55":0,"56":0,"59":0,"62":0,"64":0}},"/home/travis/build/npmtest/node-npmtest-bedwetter/node_modules/bedwetter/lib/actions/update.js":{"path":"/home/travis/build/npmtest/node-npmtest-bedwetter/node_modules/bedwetter/lib/actions/update.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"updateOneRecord","line":18,"loc":{"start":{"line":18,"column":17},"end":{"line":18,"column":63}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":9},"end":{"line":20,"column":34}}},"3":{"name":"(anonymous_3)","line":52,"loc":{"start":{"line":52,"column":6},"end":{"line":52,"column":19}}},"4":{"name":"found","line":55,"loc":{"start":{"line":55,"column":31},"end":{"line":55,"column":67}}},"5":{"name":"(anonymous_5)","line":72,"loc":{"start":{"line":72,"column":6},"end":{"line":72,"column":35}}},"6":{"name":"updated","line":74,"loc":{"start":{"line":74,"column":68},"end":{"line":74,"column":99}}},"7":{"name":"(anonymous_7)","line":101,"loc":{"start":{"line":101,"column":6},"end":{"line":101,"column":35}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":27}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":43}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":44}},"5":{"start":{"line":18,"column":0},"end":{"line":116,"column":2}},"6":{"start":{"line":20,"column":2},"end":{"line":115,"column":3}},"7":{"start":{"line":23,"column":4},"end":{"line":23,"column":69}},"8":{"start":{"line":25,"column":4},"end":{"line":28,"column":6}},"9":{"start":{"line":30,"column":4},"end":{"line":30,"column":64}},"10":{"start":{"line":33,"column":4},"end":{"line":33,"column":40}},"11":{"start":{"line":36,"column":4},"end":{"line":36,"column":11}},"12":{"start":{"line":38,"column":4},"end":{"line":42,"column":5}},"13":{"start":{"line":39,"column":6},"end":{"line":39,"column":34}},"14":{"start":{"line":41,"column":6},"end":{"line":41,"column":33}},"15":{"start":{"line":46,"column":4},"end":{"line":46,"column":42}},"16":{"start":{"line":49,"column":4},"end":{"line":113,"column":7}},"17":{"start":{"line":55,"column":8},"end":{"line":68,"column":11}},"18":{"start":{"line":57,"column":10},"end":{"line":58,"column":27}},"19":{"start":{"line":58,"column":12},"end":{"line":58,"column":27}},"20":{"start":{"line":60,"column":10},"end":{"line":61,"column":81}},"21":{"start":{"line":61,"column":12},"end":{"line":61,"column":81}},"22":{"start":{"line":63,"column":10},"end":{"line":64,"column":43}},"23":{"start":{"line":64,"column":12},"end":{"line":64,"column":43}},"24":{"start":{"line":66,"column":10},"end":{"line":66,"column":42}},"25":{"start":{"line":74,"column":8},"end":{"line":96,"column":11}},"26":{"start":{"line":79,"column":12},"end":{"line":79,"column":36}},"27":{"start":{"line":79,"column":21},"end":{"line":79,"column":36}},"28":{"start":{"line":83,"column":12},"end":{"line":85,"column":13}},"29":{"start":{"line":84,"column":14},"end":{"line":84,"column":41}},"30":{"start":{"line":87,"column":12},"end":{"line":87,"column":43}},"31":{"start":{"line":90,"column":12},"end":{"line":92,"column":13}},"32":{"start":{"line":94,"column":12},"end":{"line":94,"column":43}},"33":{"start":{"line":103,"column":8},"end":{"line":103,"column":44}},"34":{"start":{"line":103,"column":17},"end":{"line":103,"column":44}},"35":{"start":{"line":106,"column":8},"end":{"line":106,"column":51}},"36":{"start":{"line":109,"column":8},"end":{"line":109,"column":45}},"37":{"start":{"line":111,"column":8},"end":{"line":111,"column":36}}},"branchMap":{"1":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":10},"end":{"line":57,"column":10}},{"start":{"line":57,"column":10},"end":{"line":57,"column":10}}]},"2":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":10},"end":{"line":60,"column":10}},{"start":{"line":60,"column":10},"end":{"line":60,"column":10}}]},"3":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":10},"end":{"line":63,"column":10}},{"start":{"line":63,"column":10},"end":{"line":63,"column":10}}]},"4":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":12},"end":{"line":79,"column":12}},{"start":{"line":79,"column":12},"end":{"line":79,"column":12}}]},"5":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":12},"end":{"line":83,"column":12}},{"start":{"line":83,"column":12},"end":{"line":83,"column":12}}]},"6":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":16},"end":{"line":83,"column":24}},{"start":{"line":83,"column":28},"end":{"line":83,"column":43}}]},"7":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":12},"end":{"line":90,"column":12}},{"start":{"line":90,"column":12},"end":{"line":90,"column":12}}]},"8":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":8},"end":{"line":103,"column":8}},{"start":{"line":103,"column":8},"end":{"line":103,"column":8}}]}},"code":["/**"," * Module dependencies"," */","var Boom = require('boom');","var WL2Boom = require('waterline-to-boom');","var Async = require('async');","var GeneralUtil = require('../generalUtil');","","","/**"," * Update One Record"," *"," * An API call to update a model instance with the specified `id`,"," * treating the other unbound parameters as attributes."," *"," */","","module.exports = function updateOneRecord (route, origOptions) {","  ","  return function(request, reply) {","    ","    // Transform the original options using options hook","    var options = GeneralUtil.applyOptionsHook(request, origOptions);","    ","    var RequestState = request.plugins.bedwetter = {","      action: 'update',","      options: options","    };","    ","    var actionUtil = require('../actionUtil')(request, options);","    ","    // Look up the model","    var Model = actionUtil.parseModel();","  ","    // Locate and validate the required `id` parameter.","    var pk;","    ","    try {","      pk = actionUtil.requirePk();","    } catch(e) {","      return reply(Boom.wrap(e)); ","    }","    ","    // Create `values` object (monolithic combination of all parameters)","    // But omit the blacklisted params (like JSONP callback param, etc.)","    var values = actionUtil.parseValues();","  ","    // Find, update, then reply","    Async.waterfall([","      ","      // Find","      function(cb) {","        ","        // TODO: DRY this up with findOne?","        Model.findOne(pk).exec(function found(err, matchingRecord) {","          ","          if (err)","            return cb(err);","          ","          if (!matchingRecord)","            return cb(Boom.notFound('No record found with the specified `id`.'));","          ","          if (!actionUtil.validOwnership(matchingRecord, false))","            return cb(Boom.unauthorized());","          ","          return cb(null, matchingRecord);","          ","        });","      },","      ","      // Update","      function(matchingRecord, cb) {","        ","        Model.update(matchingRecord[Model.primaryKey], values).exec(function updated(err, records) {","            ","            // Differentiate between waterline-originated validation errors","            // and serious underlying issues. Respond with badRequest if a","            // validation error is encountered, w/ validation info.","            if (err) return cb(err);","      ","            // Because this should only update a single record and update","            // returns an array, just use the first item.","            if (!records || !records.length) {","              return cb(Boom.notFound());","            }","            ","            var updatedRecord = records[0];","            ","            //If more than one record was returned, something is amiss.","            if (records.length > 1) {","              // TODO: Log it","            }","            ","            return cb(null, updatedRecord);","            ","        });","        ","      }],","      ","      // Reply","      function(err, updatedRecord) {","      ","        if (err) return reply(WL2Boom(err));","        ","        // Share primary record","        RequestState.primaryRecord = updatedRecord;","        ","        // Omit fields if necessary","        actionUtil.omitFields(updatedRecord);","        ","        return reply(updatedRecord); ","        ","    });","    ","  }","};",""],"l":{"4":1,"5":1,"6":1,"7":1,"18":1,"20":0,"23":0,"25":0,"30":0,"33":0,"36":0,"38":0,"39":0,"41":0,"46":0,"49":0,"55":0,"57":0,"58":0,"60":0,"61":0,"63":0,"64":0,"66":0,"74":0,"79":0,"83":0,"84":0,"87":0,"90":0,"94":0,"103":0,"106":0,"109":0,"111":0}},"/home/travis/build/npmtest/node-npmtest-bedwetter/node_modules/bedwetter/lib/actions/destroy.js":{"path":"/home/travis/build/npmtest/node-npmtest-bedwetter/node_modules/bedwetter/lib/actions/destroy.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"destroyOneRecord","line":17,"loc":{"start":{"line":17,"column":17},"end":{"line":17,"column":64}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":9},"end":{"line":19,"column":34}}},"3":{"name":"foundRecord","line":42,"loc":{"start":{"line":42,"column":27},"end":{"line":42,"column":62}}},"4":{"name":"updated","line":59,"loc":{"start":{"line":59,"column":60},"end":{"line":59,"column":91}}},"5":{"name":"destroyedRecord","line":73,"loc":{"start":{"line":73,"column":53},"end":{"line":73,"column":84}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":27}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":43}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":44}},"4":{"start":{"line":17,"column":0},"end":{"line":91,"column":2}},"5":{"start":{"line":19,"column":2},"end":{"line":89,"column":3}},"6":{"start":{"line":22,"column":4},"end":{"line":22,"column":69}},"7":{"start":{"line":24,"column":4},"end":{"line":27,"column":6}},"8":{"start":{"line":29,"column":4},"end":{"line":29,"column":64}},"9":{"start":{"line":31,"column":4},"end":{"line":31,"column":40}},"10":{"start":{"line":34,"column":4},"end":{"line":34,"column":11}},"11":{"start":{"line":36,"column":4},"end":{"line":40,"column":5}},"12":{"start":{"line":37,"column":6},"end":{"line":37,"column":34}},"13":{"start":{"line":39,"column":6},"end":{"line":39,"column":33}},"14":{"start":{"line":42,"column":4},"end":{"line":87,"column":7}},"15":{"start":{"line":44,"column":6},"end":{"line":45,"column":35}},"16":{"start":{"line":45,"column":8},"end":{"line":45,"column":35}},"17":{"start":{"line":47,"column":6},"end":{"line":48,"column":80}},"18":{"start":{"line":48,"column":8},"end":{"line":48,"column":80}},"19":{"start":{"line":50,"column":6},"end":{"line":51,"column":42}},"20":{"start":{"line":51,"column":8},"end":{"line":51,"column":42}},"21":{"start":{"line":54,"column":6},"end":{"line":85,"column":7}},"22":{"start":{"line":56,"column":8},"end":{"line":56,"column":24}},"23":{"start":{"line":57,"column":8},"end":{"line":57,"column":59}},"24":{"start":{"line":59,"column":8},"end":{"line":69,"column":11}},"25":{"start":{"line":61,"column":12},"end":{"line":61,"column":48}},"26":{"start":{"line":61,"column":21},"end":{"line":61,"column":48}},"27":{"start":{"line":64,"column":12},"end":{"line":64,"column":52}},"28":{"start":{"line":67,"column":12},"end":{"line":67,"column":37}},"29":{"start":{"line":73,"column":8},"end":{"line":83,"column":11}},"30":{"start":{"line":75,"column":10},"end":{"line":75,"column":46}},"31":{"start":{"line":75,"column":19},"end":{"line":75,"column":46}},"32":{"start":{"line":78,"column":10},"end":{"line":78,"column":46}},"33":{"start":{"line":81,"column":10},"end":{"line":81,"column":35}}},"branchMap":{"1":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":6},"end":{"line":44,"column":6}},{"start":{"line":44,"column":6},"end":{"line":44,"column":6}}]},"2":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":6},"end":{"line":47,"column":6}},{"start":{"line":47,"column":6},"end":{"line":47,"column":6}}]},"3":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":6},"end":{"line":50,"column":6}},{"start":{"line":50,"column":6},"end":{"line":50,"column":6}}]},"4":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":6},"end":{"line":54,"column":6}},{"start":{"line":54,"column":6},"end":{"line":54,"column":6}}]},"5":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":12},"end":{"line":61,"column":12}},{"start":{"line":61,"column":12},"end":{"line":61,"column":12}}]},"6":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":10},"end":{"line":75,"column":10}},{"start":{"line":75,"column":10},"end":{"line":75,"column":10}}]}},"code":["/**"," * Module dependencies"," */","var Boom = require('boom');","var WL2Boom = require('waterline-to-boom');","var GeneralUtil = require('../generalUtil');","","/**"," * Destroy One Record"," *"," * delete  /:modelIdentity/:id"," *"," * Destroys the single model instance with the specified `id` from"," * the data adapter for the given model if it exists."," *"," */","module.exports = function destroyOneRecord (route, origOptions) {","  ","  return function(request, reply) {","    ","    // Transform the original options using options hook","    var options = GeneralUtil.applyOptionsHook(request, origOptions);","    ","    var RequestState = request.plugins.bedwetter = {","      action: 'destroy',","      options: options","    };","    ","    var actionUtil = require('../actionUtil')(request, options);","    ","    var Model = actionUtil.parseModel();","    ","    // The primary key of the record","    var pk;","    ","    try {","      pk = actionUtil.requirePk();","    } catch(e) {","      return reply(Boom.wrap(e)); ","    }","    ","    Model.findOne(pk).exec(function foundRecord (err, record) {","      ","      if (err)","        return reply(WL2Boom(err));","      ","      if(!record)","        return reply(Boom.notFound('No record found with the specified `id`.'));","      ","      if(!actionUtil.validOwnership(record, false))","        return reply(Boom.unauthorized());","      ","      // Check for setting of deleted flag rather than destroying","      if(options.deletedFlag) {","        ","        var values = {};","        values[options.deletedAttr] = options.deletedValue;","","        Model.update(record[Model.primaryKey], values).exec(function updated(err, records) {","            ","            if (err) return reply(WL2Boom(err));","","            // Share primary record","            RequestState.primaryRecord = records[0];","            ","            // \"HTTP 204 No Content\" means success","            return reply().code(204);","            ","        });","        ","      } else {","        ","        Model.destroy(record[Model.primaryKey]).exec(function destroyedRecord (err) {","          ","          if (err) return reply(WL2Boom(err));","          ","          // Share primary record","          RequestState.primaryRecord = record;","          ","          // \"HTTP 204 / No Content\" means success","          return reply().code(204);","          ","        });","        ","      }","      ","    });","    ","  }","  ","};",""],"l":{"4":1,"5":1,"6":1,"17":1,"19":0,"22":0,"24":0,"29":0,"31":0,"34":0,"36":0,"37":0,"39":0,"42":0,"44":0,"45":0,"47":0,"48":0,"50":0,"51":0,"54":0,"56":0,"57":0,"59":0,"61":0,"64":0,"67":0,"73":0,"75":0,"78":0,"81":0}},"/home/travis/build/npmtest/node-npmtest-bedwetter/node_modules/bedwetter/lib/actions/populate.js":{"path":"/home/travis/build/npmtest/node-npmtest-bedwetter/node_modules/bedwetter/lib/actions/populate.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"expand","line":22,"loc":{"start":{"line":22,"column":17},"end":{"line":22,"column":53}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":9},"end":{"line":24,"column":34}}},"3":{"name":"found","line":82,"loc":{"start":{"line":82,"column":12},"end":{"line":82,"column":48}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":27}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":43}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":44}},"5":{"start":{"line":22,"column":0},"end":{"line":150,"column":2}},"6":{"start":{"line":24,"column":2},"end":{"line":148,"column":3}},"7":{"start":{"line":27,"column":4},"end":{"line":27,"column":69}},"8":{"start":{"line":29,"column":4},"end":{"line":32,"column":6}},"9":{"start":{"line":34,"column":4},"end":{"line":34,"column":64}},"10":{"start":{"line":36,"column":4},"end":{"line":36,"column":40}},"11":{"start":{"line":37,"column":4},"end":{"line":37,"column":43}},"12":{"start":{"line":39,"column":4},"end":{"line":39,"column":59}},"13":{"start":{"line":39,"column":29},"end":{"line":39,"column":59}},"14":{"start":{"line":41,"column":4},"end":{"line":41,"column":17}},"15":{"start":{"line":43,"column":4},"end":{"line":47,"column":5}},"16":{"start":{"line":44,"column":6},"end":{"line":44,"column":40}},"17":{"start":{"line":46,"column":6},"end":{"line":46,"column":33}},"18":{"start":{"line":52,"column":4},"end":{"line":52,"column":43}},"19":{"start":{"line":53,"column":4},"end":{"line":53,"column":17}},"20":{"start":{"line":55,"column":4},"end":{"line":77,"column":5}},"21":{"start":{"line":57,"column":6},"end":{"line":57,"column":25}},"22":{"start":{"line":61,"column":6},"end":{"line":76,"column":7}},"23":{"start":{"line":63,"column":8},"end":{"line":65,"column":10}},"24":{"start":{"line":69,"column":8},"end":{"line":74,"column":10}},"25":{"start":{"line":79,"column":4},"end":{"line":146,"column":9}},"26":{"start":{"line":84,"column":8},"end":{"line":85,"column":37}},"27":{"start":{"line":85,"column":10},"end":{"line":85,"column":37}},"28":{"start":{"line":87,"column":8},"end":{"line":88,"column":80}},"29":{"start":{"line":88,"column":10},"end":{"line":88,"column":80}},"30":{"start":{"line":90,"column":8},"end":{"line":91,"column":44}},"31":{"start":{"line":91,"column":10},"end":{"line":91,"column":44}},"32":{"start":{"line":93,"column":8},"end":{"line":94,"column":145}},"33":{"start":{"line":94,"column":10},"end":{"line":94,"column":145}},"34":{"start":{"line":97,"column":8},"end":{"line":97,"column":52}},"35":{"start":{"line":101,"column":8},"end":{"line":143,"column":9}},"36":{"start":{"line":103,"column":10},"end":{"line":124,"column":11}},"37":{"start":{"line":105,"column":12},"end":{"line":118,"column":13}},"38":{"start":{"line":108,"column":14},"end":{"line":108,"column":73}},"39":{"start":{"line":111,"column":14},"end":{"line":111,"column":39}},"40":{"start":{"line":116,"column":14},"end":{"line":116,"column":48}},"41":{"start":{"line":123,"column":12},"end":{"line":123,"column":42}},"42":{"start":{"line":128,"column":10},"end":{"line":141,"column":11}},"43":{"start":{"line":131,"column":12},"end":{"line":131,"column":58}},"44":{"start":{"line":136,"column":12},"end":{"line":136,"column":60}},"45":{"start":{"line":139,"column":12},"end":{"line":139,"column":51}}},"branchMap":{"1":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4}},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]},"2":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":8},"end":{"line":39,"column":17}},{"start":{"line":39,"column":21},"end":{"line":39,"column":27}}]},"3":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":55,"column":4}},{"start":{"line":55,"column":4},"end":{"line":55,"column":4}}]},"4":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":6},"end":{"line":61,"column":6}},{"start":{"line":61,"column":6},"end":{"line":61,"column":6}}]},"5":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":8},"end":{"line":84,"column":8}},{"start":{"line":84,"column":8},"end":{"line":84,"column":8}}]},"6":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":8},"end":{"line":87,"column":8}},{"start":{"line":87,"column":8},"end":{"line":87,"column":8}}]},"7":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":8},"end":{"line":90,"column":8}},{"start":{"line":90,"column":8},"end":{"line":90,"column":8}}]},"8":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":8},"end":{"line":93,"column":8}},{"start":{"line":93,"column":8},"end":{"line":93,"column":8}}]},"9":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":8},"end":{"line":101,"column":8}},{"start":{"line":101,"column":8},"end":{"line":101,"column":8}}]},"10":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":10},"end":{"line":103,"column":10}},{"start":{"line":103,"column":10},"end":{"line":103,"column":10}}]},"11":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":12},"end":{"line":105,"column":12}},{"start":{"line":105,"column":12},"end":{"line":105,"column":12}}]},"12":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":10},"end":{"line":128,"column":10}},{"start":{"line":128,"column":10},"end":{"line":128,"column":10}}]}},"code":["/**"," * Module dependencies"," */","var Boom = require('boom');","var WL2Boom = require('waterline-to-boom');","var _ = require('lodash');","var GeneralUtil = require('../generalUtil');","","/**"," * Populate an association"," *"," * get /model/:parentid/relation"," * get /model/:parentid/relation/:id"," *"," * @param {Object} where       - the find criteria (passed directly to the ORM)"," * @param {Integer} limit      - the maximum number of records to send back (useful for pagination)"," * @param {Integer} skip       - the number of records to skip (useful for pagination)"," * @param {String} sort        - the order of returned records, e.g. `name ASC` or `age DESC`"," *"," */","","module.exports = function expand(route, origOptions) {","  ","  return function(request, reply) {","    ","    // Transform the original options using options hook","    var options = GeneralUtil.applyOptionsHook(request, origOptions);","    ","    var RequestState = request.plugins.bedwetter = {","      action: 'populate',","      options: options","    };","    ","    var actionUtil = require('../actionUtil')(request, options);","    ","    var Model = actionUtil.parseModel();","    var relation = options.associationAttr;","    ","    if (!relation || !Model) return reply(Boom.notFound());","    ","    var parentPk;","    ","    try {","      parentPk = actionUtil.requirePk();","    } catch(e) {","      return reply(Boom.wrap(e)); ","    }","    ","    // Determine whether to populate using a criteria, or the","    // specified primary key of the child record, or with no","    // filter at all.","    var childPk = actionUtil.parsePk(true);","    var criteria;","    ","    if (childPk) {","      ","      criteria = childPk;","      ","    } else {","      ","      if (options._private.count) {","        ","        criteria = {","          where:  actionUtil.parseCriteria(true)","        };","        ","      } else {","      ","        criteria = {","          where:  actionUtil.parseCriteria(true),","          skip:   actionUtil.parseSkip(),","          limit:  actionUtil.parseLimit(),","          sort:   actionUtil.parseSort()","        };  ","      ","      }","    }","    ","    Model","      .findOne(parentPk)","      .populate(relation, criteria)","      .exec(function found(err, matchingRecord) {","        ","        if (err)","          return reply(WL2Boom(err));","        ","        if (!matchingRecord)","          return reply(Boom.notFound('No record found with the specified id.'));","        ","        if (!actionUtil.validOwnership(matchingRecord, false))","          return reply(Boom.unauthorized());","        ","        if (!matchingRecord[relation])","          return reply(Boom.notFound(util.format('Specified record (%s) is missing relation `%s`', GeneralUtil.pkToString(parentPk), relation)));","        ","        // Share primary record","        RequestState.primaryRecord = matchingRecord;","        ","        // If looking for a particular relation, return that it exists or that it does not.","        // Otherwise, just return the results.","        if (childPk) {","          ","          if (matchingRecord[relation].length) {","            ","            if (actionUtil.validOwnership(matchingRecord[relation][0], true)) {","              ","              // Share secondary record","              RequestState.secondaryRecord = matchingRecord[relation][0];","              ","              // The relation exists.  Acknowledge with \"204 No Content\"","              return reply().code(204);","            ","            } else {","              ","              // Not authorized to check, didn't own child record","              return reply(Boom.unauthorized());","              ","            }","            ","          } else {","            ","            // The relation does not exist.  That's a 404!","            return reply(Boom.notFound());","          }","          ","        } else {","          ","          if (options._private.count) {","            ","            // Here's your count!","            return reply(matchingRecord[relation].length);","            ","          } else {","            ","            // Omit fields if necessary","            actionUtil.omitFields(matchingRecord[relation]);","            ","            // Here are your results","            return reply(matchingRecord[relation]);","          ","          }","          ","        }","        ","      ","      });","    ","  }","  ","};",""],"l":{"4":1,"5":1,"6":1,"7":1,"22":1,"24":0,"27":0,"29":0,"34":0,"36":0,"37":0,"39":0,"41":0,"43":0,"44":0,"46":0,"52":0,"53":0,"55":0,"57":0,"61":0,"63":0,"69":0,"79":0,"84":0,"85":0,"87":0,"88":0,"90":0,"91":0,"93":0,"94":0,"97":0,"101":0,"103":0,"105":0,"108":0,"111":0,"116":0,"123":0,"128":0,"131":0,"136":0,"139":0}},"/home/travis/build/npmtest/node-npmtest-bedwetter/node_modules/bedwetter/lib/actions/add.js":{"path":"/home/travis/build/npmtest/node-npmtest-bedwetter/node_modules/bedwetter/lib/actions/add.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0,0,0,0],"20":[0,0],"21":[0,0],"22":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"addToCollection","line":24,"loc":{"start":{"line":24,"column":17},"end":{"line":24,"column":63}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":9},"end":{"line":26,"column":35}}},"3":{"name":"(anonymous_3)","line":93,"loc":{"start":{"line":93,"column":14},"end":{"line":93,"column":28}}},"4":{"name":"foundParent","line":95,"loc":{"start":{"line":95,"column":37},"end":{"line":95,"column":77}}},"5":{"name":"(anonymous_5)","line":111,"loc":{"start":{"line":111,"column":30},"end":{"line":111,"column":43}}},"6":{"name":"foundChild","line":119,"loc":{"start":{"line":119,"column":51},"end":{"line":119,"column":89}}},"7":{"name":"createdNewChild","line":136,"loc":{"start":{"line":136,"column":40},"end":{"line":136,"column":87}}},"8":{"name":"(anonymous_8)","line":149,"loc":{"start":{"line":149,"column":37},"end":{"line":149,"column":61}}},"9":{"name":"readyToSave","line":177,"loc":{"start":{"line":177,"column":4},"end":{"line":177,"column":45}}},"10":{"name":"saved","line":181,"loc":{"start":{"line":181,"column":31},"end":{"line":181,"column":64}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":26}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":27}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":29}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":43}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":44}},"7":{"start":{"line":24,"column":0},"end":{"line":214,"column":2}},"8":{"start":{"line":26,"column":2},"end":{"line":212,"column":3}},"9":{"start":{"line":29,"column":4},"end":{"line":29,"column":69}},"10":{"start":{"line":31,"column":4},"end":{"line":34,"column":6}},"11":{"start":{"line":36,"column":4},"end":{"line":36,"column":64}},"12":{"start":{"line":39,"column":4},"end":{"line":39,"column":40}},"13":{"start":{"line":40,"column":4},"end":{"line":40,"column":43}},"14":{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},"15":{"start":{"line":43,"column":6},"end":{"line":43,"column":102}},"16":{"start":{"line":47,"column":4},"end":{"line":47,"column":17}},"17":{"start":{"line":49,"column":4},"end":{"line":53,"column":5}},"18":{"start":{"line":50,"column":6},"end":{"line":50,"column":40}},"19":{"start":{"line":52,"column":6},"end":{"line":52,"column":33}},"20":{"start":{"line":58,"column":4},"end":{"line":58,"column":81}},"21":{"start":{"line":59,"column":4},"end":{"line":59,"column":65}},"22":{"start":{"line":61,"column":4},"end":{"line":61,"column":63}},"23":{"start":{"line":62,"column":4},"end":{"line":62,"column":44}},"24":{"start":{"line":66,"column":4},"end":{"line":66,"column":14}},"25":{"start":{"line":69,"column":4},"end":{"line":69,"column":51}},"26":{"start":{"line":72,"column":4},"end":{"line":82,"column":5}},"27":{"start":{"line":74,"column":6},"end":{"line":74,"column":44}},"28":{"start":{"line":75,"column":6},"end":{"line":75,"column":64}},"29":{"start":{"line":79,"column":6},"end":{"line":79,"column":49}},"30":{"start":{"line":80,"column":6},"end":{"line":80,"column":43}},"31":{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},"32":{"start":{"line":85,"column":6},"end":{"line":85,"column":220}},"33":{"start":{"line":88,"column":4},"end":{"line":88,"column":29}},"34":{"start":{"line":90,"column":4},"end":{"line":210,"column":7}},"35":{"start":{"line":95,"column":8},"end":{"line":104,"column":11}},"36":{"start":{"line":97,"column":10},"end":{"line":97,"column":34}},"37":{"start":{"line":97,"column":19},"end":{"line":97,"column":34}},"38":{"start":{"line":98,"column":10},"end":{"line":98,"column":56}},"39":{"start":{"line":98,"column":29},"end":{"line":98,"column":56}},"40":{"start":{"line":99,"column":10},"end":{"line":99,"column":94}},"41":{"start":{"line":99,"column":63},"end":{"line":99,"column":94}},"42":{"start":{"line":100,"column":10},"end":{"line":100,"column":97}},"43":{"start":{"line":100,"column":70},"end":{"line":100,"column":97}},"44":{"start":{"line":102,"column":10},"end":{"line":102,"column":33}},"45":{"start":{"line":117,"column":8},"end":{"line":144,"column":9}},"46":{"start":{"line":119,"column":10},"end":{"line":132,"column":13}},"47":{"start":{"line":121,"column":12},"end":{"line":121,"column":36}},"48":{"start":{"line":121,"column":21},"end":{"line":121,"column":36}},"49":{"start":{"line":124,"column":12},"end":{"line":125,"column":41}},"50":{"start":{"line":125,"column":14},"end":{"line":125,"column":41}},"51":{"start":{"line":127,"column":12},"end":{"line":128,"column":45}},"52":{"start":{"line":128,"column":14},"end":{"line":128,"column":45}},"53":{"start":{"line":131,"column":12},"end":{"line":131,"column":41}},"54":{"start":{"line":136,"column":10},"end":{"line":142,"column":13}},"55":{"start":{"line":138,"column":12},"end":{"line":138,"column":36}},"56":{"start":{"line":138,"column":21},"end":{"line":138,"column":36}},"57":{"start":{"line":139,"column":12},"end":{"line":139,"column":32}},"58":{"start":{"line":141,"column":12},"end":{"line":141,"column":44}},"59":{"start":{"line":151,"column":8},"end":{"line":171,"column":9}},"60":{"start":{"line":155,"column":10},"end":{"line":155,"column":54}},"61":{"start":{"line":156,"column":10},"end":{"line":156,"column":61}},"62":{"start":{"line":158,"column":10},"end":{"line":158,"column":22}},"63":{"start":{"line":166,"column":10},"end":{"line":168,"column":11}},"64":{"start":{"line":167,"column":12},"end":{"line":167,"column":27}},"65":{"start":{"line":170,"column":10},"end":{"line":170,"column":22}},"66":{"start":{"line":179,"column":6},"end":{"line":179,"column":42}},"67":{"start":{"line":179,"column":15},"end":{"line":179,"column":42}},"68":{"start":{"line":181,"column":6},"end":{"line":208,"column":9}},"69":{"start":{"line":184,"column":8},"end":{"line":184,"column":122}},"70":{"start":{"line":185,"column":8},"end":{"line":185,"column":71}},"71":{"start":{"line":185,"column":44},"end":{"line":185,"column":71}},"72":{"start":{"line":188,"column":8},"end":{"line":188,"column":57}},"73":{"start":{"line":190,"column":8},"end":{"line":206,"column":9}},"74":{"start":{"line":192,"column":10},"end":{"line":192,"column":94}},"75":{"start":{"line":195,"column":10},"end":{"line":195,"column":58}},"76":{"start":{"line":197,"column":10},"end":{"line":197,"column":67}},"77":{"start":{"line":202,"column":10},"end":{"line":202,"column":66}},"78":{"start":{"line":205,"column":10},"end":{"line":205,"column":35}}},"branchMap":{"1":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]},"2":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":72,"column":4}},{"start":{"line":72,"column":4},"end":{"line":72,"column":4}}]},"3":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":23},"end":{"line":74,"column":37}},{"start":{"line":74,"column":41},"end":{"line":74,"column":43}}]},"4":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":33},"end":{"line":75,"column":57}},{"start":{"line":75,"column":61},"end":{"line":75,"column":63}}]},"5":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":84,"column":4}},{"start":{"line":84,"column":4},"end":{"line":84,"column":4}}]},"6":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":8},"end":{"line":84,"column":14}},{"start":{"line":84,"column":18},"end":{"line":84,"column":34}}]},"7":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":10},"end":{"line":97,"column":10}},{"start":{"line":97,"column":10},"end":{"line":97,"column":10}}]},"8":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":10},"end":{"line":98,"column":10}},{"start":{"line":98,"column":10},"end":{"line":98,"column":10}}]},"9":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":10},"end":{"line":99,"column":10}},{"start":{"line":99,"column":10},"end":{"line":99,"column":10}}]},"10":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":10},"end":{"line":100,"column":10}},{"start":{"line":100,"column":10},"end":{"line":100,"column":10}}]},"11":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":14},"end":{"line":100,"column":37}},{"start":{"line":100,"column":41},"end":{"line":100,"column":68}}]},"12":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":8},"end":{"line":117,"column":8}},{"start":{"line":117,"column":8},"end":{"line":117,"column":8}}]},"13":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":12},"end":{"line":121,"column":12}},{"start":{"line":121,"column":12},"end":{"line":121,"column":12}}]},"14":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":12},"end":{"line":124,"column":12}},{"start":{"line":124,"column":12},"end":{"line":124,"column":12}}]},"15":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":12},"end":{"line":127,"column":12}},{"start":{"line":127,"column":12},"end":{"line":127,"column":12}}]},"16":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":12},"end":{"line":138,"column":12}},{"start":{"line":138,"column":12},"end":{"line":138,"column":12}}]},"17":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":10},"end":{"line":166,"column":10}},{"start":{"line":166,"column":10},"end":{"line":166,"column":10}}]},"18":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":6},"end":{"line":179,"column":6}},{"start":{"line":179,"column":6},"end":{"line":179,"column":6}}]},"19":{"line":184,"type":"binary-expr","locations":[{"start":{"line":184,"column":38},"end":{"line":184,"column":41}},{"start":{"line":184,"column":45},"end":{"line":184,"column":68}},{"start":{"line":184,"column":72},"end":{"line":184,"column":82}},{"start":{"line":184,"column":86},"end":{"line":184,"column":92}},{"start":{"line":184,"column":96},"end":{"line":184,"column":120}}]},"20":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":8},"end":{"line":185,"column":8}},{"start":{"line":185,"column":8},"end":{"line":185,"column":8}}]},"21":{"line":185,"type":"binary-expr","locations":[{"start":{"line":185,"column":12},"end":{"line":185,"column":15}},{"start":{"line":185,"column":19},"end":{"line":185,"column":42}}]},"22":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":8},"end":{"line":190,"column":8}},{"start":{"line":190,"column":8},"end":{"line":190,"column":8}}]}},"code":["/**"," * Module dependencies"," */","var _ = require('lodash');","var Boom = require('boom');","var Hoek = require('hoek');","var Async = require('async');","var WL2Boom = require('waterline-to-boom');","var GeneralUtil = require('../generalUtil');","","/**"," * Add Record To Collection"," *"," * post  /:modelIdentity/:id/:collectionAttr/:childid"," *"," * Associate one record with the collection attribute of another."," * e.g. add a Horse named \"Jimmy\" to a Farm's \"animals\"."," * If the record being added has a primary key value already, it will"," * just be linked.  If it doesn't, a new record will be created, then"," * linked appropriately.  In either case, the association is bidirectional."," *"," */","","module.exports = function addToCollection (route, origOptions) {","","  return function (request, reply) {","    ","    // Transform the original options using options hook","    var options = GeneralUtil.applyOptionsHook(request, origOptions);","    ","    var RequestState = request.plugins.bedwetter = {","      action: 'add',","      options: options","    };","    ","    var actionUtil = require('../actionUtil')(request, options);","    ","    // Ensure a model and alias can be deduced from the request.","    var Model = actionUtil.parseModel();","    var relation = options.associationAttr;","    ","    if (!relation) {","      return reply(Boom.wrap(new Error('Missing required route option, `options.associationAttr`.')));","    }","","    // The primary key of the parent record","    var parentPk;","    ","    try {","      parentPk = actionUtil.requirePk();","    } catch(e) {","      return reply(Boom.wrap(e)); ","    }","  ","    // Get the model class of the child in order to figure out the name of","    // the primary key attribute.","    ","    var associationAttr = _.findWhere(options.associations, { alias: relation });","    Hoek.assert(_.isObject(associationAttr), 'Bad association.');","    ","    var ChildModel = request.model[associationAttr.collection];","    var childPkAttr = ChildModel.primaryKey;","  ","  ","    // The child record to associate is defined by either...","    var child;","  ","    // ...a primary key:","    var supposedChildPk = actionUtil.parsePk(true);","    ","    // ...or an object of values:","    if (!supposedChildPk)  { ","      ","      options.values = options.values || {};","      options.values.blacklist = options.values.blacklist || [];","      // Make sure nobody can specify the id of the child.","      ","      // You either link a record with the id in the URL or create an enitrely new record without specifying the id!","      options.values.blacklist.push(childPkAttr);","      child = actionUtil.parseValues(true);","      ","    }","  ","    if (!child && !supposedChildPk) {","      return reply(Boom.badRequest('You must specify the record to add (either the primary key of an existing record to link, or a new object without a primary key which will be used to create a record then link it.)'));","    }","  ","    var createdChild = false;","  ","    Async.auto({","  ","      // Look up the parent record","      parent: function (cb) {","        ","        Model.findOne(parentPk).exec(function foundParent(err, parentRecord) {","          ","          if (err) return cb(err);","          if (!parentRecord) return cb(Boom.notFound());","          if (!actionUtil.validOwnership(parentRecord, false)) return cb(Boom.unauthorized());","          if (!parentRecord[relation] || !parentRecord[relation].add) return cb(Boom.notFound());","                    ","          cb(null, parentRecord);","          ","        });","      },","  ","      // If a primary key was specified in the `child` object we parsed","      // from the request, look it up to make sure it exists.  Send back its primary key value.","      // This is here because, although you can do this with `.save()`, you can't actually","      // get ahold of the created child record data, unless you create it first.","      actualChild: ['parent', function(cb) {","  ","        // Below, we use the primary key attribute to pull out the primary key value","        // (which might not have existed until now, if the .add() resulted in a `create()`)","  ","        // If the primary key was specified for the child record, we should try to find it","        if (supposedChildPk) {","          ","          ChildModel.findOne(supposedChildPk).exec(function foundChild(err, childRecord) {","            ","            if (err) return cb(err);","            ","            // Trying to associate a record that does not exist","            if (!childRecord)","              return cb(Boom.notFound());","            ","            if (!actionUtil.validOwnership(childRecord, true))","              return cb(Boom.unauthorized());","            ","            // Otherwise use the one we found.","            return cb(null, childRecord);","          });","          ","        } else { // Otherwise, it must be referring to a new thing, so create it.","          ","          ChildModel.create(child).exec(function createdNewChild (err, newChildRecord) {","            ","            if (err) return cb(err);","            createdChild = true;","            ","            return cb(null, newChildRecord);","          });","          ","        }","        ","      }],","  ","      // Add the child record to the parent's collection","      add: ['parent', 'actualChild', function(cb, asyncData) {","        ","        try {","          ","          // `collection` is the parent record's collection we","          // want to add the child to.","          var collection = asyncData.parent[relation];","          collection.add(asyncData.actualChild[childPkAttr]);","          ","          return cb();","        ","        } catch (err) {","          ","          // TODO: could all this be simplified?  do we need try/catch for record.add?","          // I think not.  It's just an Array.push: https://github.com/balderdashy/waterline/blob/4653f8a18016d2bcde9a70c90dd63a7c69381935/lib/waterline/model/lib/association.js","          // On the flipside, what if this relation doesn't exist?  Test!!  Should this err be turned into a notFound, similarly to in the parent function?","          // Okay now this relation is properly tested for in the parent function","          if (err) {","            return cb(err);","          }","          ","          return cb();","        }","        ","      }]","    },","  ","    // Finally, save the parent record","    function readyToSave (err, asyncResults) {","  ","      if (err) return reply(WL2Boom(err));","      ","      asyncResults.parent.save(function saved(err, savedParent) {","  ","        // Ignore `insert` errors for duplicate adds, as add is idempotent.","        var isDuplicateInsertError = (err && typeof err === 'object' && err.length && err[0] && err[0].type === 'insert');","        if (err && !isDuplicateInsertError) return reply(WL2Boom(err));","        ","        // Share primary record","        RequestState.primaryRecord = asyncResults.parent;","        ","        if (createdChild) {","          ","          var location = actionUtil.getCreatedLocation(asyncResults.actualChild[childPkAttr]);","          ","          // Omit fields if necessary","          actionUtil.omitFields(asyncResults.actualChild);","          ","          return reply(asyncResults.actualChild).created(location);","        ","        } else {","          ","          // Share secondary record","          RequestState.secondaryRecord = asyncResults.actualChild;","          ","          // \"HTTP 204 / No Content\" means success","          return reply().code(204);","        }","        ","      });","  ","    }); // end async.auto","    ","  }","  ","};",""],"l":{"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"24":1,"26":0,"29":0,"31":0,"36":0,"39":0,"40":0,"42":0,"43":0,"47":0,"49":0,"50":0,"52":0,"58":0,"59":0,"61":0,"62":0,"66":0,"69":0,"72":0,"74":0,"75":0,"79":0,"80":0,"84":0,"85":0,"88":0,"90":0,"95":0,"97":0,"98":0,"99":0,"100":0,"102":0,"117":0,"119":0,"121":0,"124":0,"125":0,"127":0,"128":0,"131":0,"136":0,"138":0,"139":0,"141":0,"151":0,"155":0,"156":0,"158":0,"166":0,"167":0,"170":0,"179":0,"181":0,"184":0,"185":0,"188":0,"190":0,"192":0,"195":0,"197":0,"202":0,"205":0}},"/home/travis/build/npmtest/node-npmtest-bedwetter/node_modules/bedwetter/lib/actions/remove.js":{"path":"/home/travis/build/npmtest/node-npmtest-bedwetter/node_modules/bedwetter/lib/actions/remove.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"remove","line":17,"loc":{"start":{"line":17,"column":17},"end":{"line":17,"column":53}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":9},"end":{"line":19,"column":34}}},"3":{"name":"found","line":65,"loc":{"start":{"line":65,"column":56},"end":{"line":65,"column":90}}},"4":{"name":"(anonymous_4)","line":88,"loc":{"start":{"line":88,"column":24},"end":{"line":88,"column":57}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":27}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":27}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":43}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":26}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":44}},"6":{"start":{"line":17,"column":0},"end":{"line":103,"column":2}},"7":{"start":{"line":19,"column":2},"end":{"line":102,"column":3}},"8":{"start":{"line":22,"column":4},"end":{"line":22,"column":69}},"9":{"start":{"line":24,"column":4},"end":{"line":27,"column":6}},"10":{"start":{"line":29,"column":4},"end":{"line":29,"column":64}},"11":{"start":{"line":32,"column":4},"end":{"line":32,"column":40}},"12":{"start":{"line":33,"column":4},"end":{"line":33,"column":43}},"13":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"14":{"start":{"line":36,"column":6},"end":{"line":36,"column":102}},"15":{"start":{"line":39,"column":4},"end":{"line":39,"column":81}},"16":{"start":{"line":40,"column":4},"end":{"line":40,"column":65}},"17":{"start":{"line":42,"column":4},"end":{"line":42,"column":63}},"18":{"start":{"line":43,"column":4},"end":{"line":43,"column":44}},"19":{"start":{"line":46,"column":4},"end":{"line":46,"column":17}},"20":{"start":{"line":48,"column":4},"end":{"line":52,"column":5}},"21":{"start":{"line":49,"column":6},"end":{"line":49,"column":40}},"22":{"start":{"line":51,"column":6},"end":{"line":51,"column":33}},"23":{"start":{"line":56,"column":4},"end":{"line":56,"column":16}},"24":{"start":{"line":58,"column":4},"end":{"line":62,"column":5}},"25":{"start":{"line":59,"column":6},"end":{"line":59,"column":43}},"26":{"start":{"line":61,"column":6},"end":{"line":61,"column":33}},"27":{"start":{"line":64,"column":4},"end":{"line":100,"column":7}},"28":{"start":{"line":67,"column":6},"end":{"line":68,"column":35}},"29":{"start":{"line":68,"column":8},"end":{"line":68,"column":35}},"30":{"start":{"line":71,"column":6},"end":{"line":72,"column":38}},"31":{"start":{"line":72,"column":8},"end":{"line":72,"column":38}},"32":{"start":{"line":75,"column":6},"end":{"line":76,"column":42}},"33":{"start":{"line":76,"column":8},"end":{"line":76,"column":42}},"34":{"start":{"line":79,"column":6},"end":{"line":80,"column":38}},"35":{"start":{"line":80,"column":8},"end":{"line":80,"column":38}},"36":{"start":{"line":83,"column":6},"end":{"line":84,"column":42}},"37":{"start":{"line":84,"column":8},"end":{"line":84,"column":42}},"38":{"start":{"line":86,"column":6},"end":{"line":86,"column":76}},"39":{"start":{"line":88,"column":6},"end":{"line":99,"column":9}},"40":{"start":{"line":90,"column":8},"end":{"line":90,"column":44}},"41":{"start":{"line":90,"column":17},"end":{"line":90,"column":44}},"42":{"start":{"line":93,"column":8},"end":{"line":93,"column":57}},"43":{"start":{"line":94,"column":8},"end":{"line":94,"column":65}},"44":{"start":{"line":97,"column":8},"end":{"line":97,"column":33}}},"branchMap":{"1":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":35,"column":4}},{"start":{"line":35,"column":4},"end":{"line":35,"column":4}}]},"2":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":6},"end":{"line":67,"column":6}},{"start":{"line":67,"column":6},"end":{"line":67,"column":6}}]},"3":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":6},"end":{"line":71,"column":6}},{"start":{"line":71,"column":6},"end":{"line":71,"column":6}}]},"4":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":6},"end":{"line":75,"column":6}},{"start":{"line":75,"column":6},"end":{"line":75,"column":6}}]},"5":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":6},"end":{"line":79,"column":6}},{"start":{"line":79,"column":6},"end":{"line":79,"column":6}}]},"6":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":10},"end":{"line":79,"column":33}},{"start":{"line":79,"column":37},"end":{"line":79,"column":63}}]},"7":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":6},"end":{"line":83,"column":6}},{"start":{"line":83,"column":6},"end":{"line":83,"column":6}}]},"8":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":8},"end":{"line":90,"column":8}},{"start":{"line":90,"column":8},"end":{"line":90,"column":8}}]}},"code":["/**"," * Module dependencies"," */","var Boom = require('boom');","var Hoek = require('hoek');","var WL2Boom = require('waterline-to-boom');","var _ = require('lodash');","var GeneralUtil = require('../generalUtil');","","/**"," * delete /model/:parentid/relation/:id"," * "," * Remove a member from an association"," *"," */","","module.exports = function remove(route, origOptions) {","  ","  return function(request, reply) {","    ","    // Transform the original options using options hook","    var options = GeneralUtil.applyOptionsHook(request, origOptions);","    ","    var RequestState = request.plugins.bedwetter = {","      action: 'remove',","      options: options","    };","    ","    var actionUtil = require('../actionUtil')(request, options);","    ","    // Ensure a model and alias can be deduced from the request.","    var Model = actionUtil.parseModel();","    var relation = options.associationAttr;","    ","    if (!relation) {","      return reply(Boom.wrap(new Error('Missing required route option, `options.associationAttr`.')));","    }","  ","    var associationAttr = _.findWhere(options.associations, { alias: relation });","    Hoek.assert(_.isObject(associationAttr), 'Bad association.');","  ","    var ChildModel = request.model[associationAttr.collection];","    var childPkAttr = ChildModel.primaryKey;","  ","    // The primary key of the parent record","    var parentPk;","    ","    try {","      parentPk = actionUtil.requirePk();","    } catch(e) {","      return reply(Boom.wrap(e)); ","    }","  ","    // The primary key of the child record to remove","    // from the aliased collection","    var childPk;","    ","    try {","      childPk = actionUtil.requirePk(true);","    } catch(e) {","      return reply(Boom.wrap(e)); ","    }","    ","    Model","    .findOne(parentPk).populate(relation, childPk).exec(function found(err, parentRecord) {","      ","      if (err)","        return reply(WL2Boom(err));","      ","      // That parent record wasn't found","      if (!parentRecord)","        return reply(Boom.notFound());","      ","      // Check parent record owner","      if (!actionUtil.validOwnership(parentRecord, false))","        return reply(Boom.unauthorized());","      ","      // That child record wasn't found.","      if (!parentRecord[relation] || !parentRecord[relation][0])","        return reply(Boom.notFound());","      ","      // Check child record owner","      if (!actionUtil.validOwnership(parentRecord[relation][0], true))","        return reply(Boom.unauthorized());","      ","      parentRecord[relation].remove(parentRecord[relation][0][childPkAttr]);","      ","      parentRecord.save(function(err, parentRecordSaved) {","        ","        if (err) return reply(WL2Boom(err));","        ","        // Share primary and secondary records","        RequestState.primaryRecord   = parentRecordSaved;","        RequestState.secondaryRecord = parentRecord[relation][0];","        ","        // \"HTTP 204 / No Content\" means success","        return reply().code(204);","        ","      });","    });","  ","  }","};",""],"l":{"4":1,"5":1,"6":1,"7":1,"8":1,"17":1,"19":0,"22":0,"24":0,"29":0,"32":0,"33":0,"35":0,"36":0,"39":0,"40":0,"42":0,"43":0,"46":0,"48":0,"49":0,"51":0,"56":0,"58":0,"59":0,"61":0,"64":0,"67":0,"68":0,"71":0,"72":0,"75":0,"76":0,"79":0,"80":0,"83":0,"84":0,"86":0,"88":0,"90":0,"93":0,"94":0,"97":0}},"/home/travis/build/npmtest/node-npmtest-bedwetter/node_modules/bedwetter/lib/actionUtil.js":{"path":"/home/travis/build/npmtest/node-npmtest-bedwetter/node_modules/bedwetter/lib/actionUtil.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":1,"162":0,"163":0,"164":0,"165":0,"166":0,"167":1,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0,0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"fnMap":{"1":{"name":"(anonymous_1)","line":16,"loc":{"start":{"line":16,"column":17},"end":{"line":16,"column":44}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":18},"end":{"line":30,"column":35}}},"3":{"name":"populateEachAssociation","line":46,"loc":{"start":{"line":46,"column":45},"end":{"line":46,"column":99}}},"4":{"name":"(anonymous_4)","line":98,"loc":{"start":{"line":98,"column":13},"end":{"line":98,"column":30}}},"5":{"name":"(anonymous_5)","line":156,"loc":{"start":{"line":156,"column":15},"end":{"line":156,"column":32}}},"6":{"name":"(anonymous_6)","line":193,"loc":{"start":{"line":193,"column":19},"end":{"line":193,"column":36}}},"7":{"name":"(anonymous_7)","line":224,"loc":{"start":{"line":224,"column":30},"end":{"line":224,"column":42}}},"8":{"name":"(anonymous_8)","line":262,"loc":{"start":{"line":262,"column":17},"end":{"line":262,"column":34}}},"9":{"name":"(anonymous_9)","line":278,"loc":{"start":{"line":278,"column":30},"end":{"line":278,"column":42}}},"10":{"name":"(anonymous_10)","line":306,"loc":{"start":{"line":306,"column":16},"end":{"line":306,"column":28}}},"11":{"name":"(anonymous_11)","line":324,"loc":{"start":{"line":324,"column":15},"end":{"line":324,"column":27}}},"12":{"name":"(anonymous_12)","line":333,"loc":{"start":{"line":333,"column":16},"end":{"line":333,"column":28}}},"13":{"name":"(anonymous_13)","line":376,"loc":{"start":{"line":376,"column":15},"end":{"line":376,"column":27}}},"14":{"name":"(anonymous_14)","line":392,"loc":{"start":{"line":392,"column":22},"end":{"line":392,"column":33}}},"15":{"name":"(anonymous_15)","line":404,"loc":{"start":{"line":404,"column":15},"end":{"line":404,"column":26}}},"16":{"name":"(anonymous_16)","line":420,"loc":{"start":{"line":420,"column":20},"end":{"line":420,"column":44}}},"17":{"name":"(anonymous_17)","line":458,"loc":{"start":{"line":458,"column":24},"end":{"line":458,"column":37}}},"18":{"name":"(anonymous_18)","line":469,"loc":{"start":{"line":469,"column":16},"end":{"line":469,"column":34}}},"19":{"name":"(anonymous_19)","line":505,"loc":{"start":{"line":505,"column":24},"end":{"line":505,"column":41}}},"20":{"name":"tryToParseJSON","line":521,"loc":{"start":{"line":521,"column":0},"end":{"line":521,"column":30}}},"21":{"name":"omitDeep","line":530,"loc":{"start":{"line":530,"column":0},"end":{"line":530,"column":29}}},"22":{"name":"(anonymous_22)","line":535,"loc":{"start":{"line":535,"column":17},"end":{"line":535,"column":31}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":26}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":46}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":27}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":27}},"6":{"start":{"line":16,"column":0},"end":{"line":515,"column":1}},"7":{"start":{"line":18,"column":4},"end":{"line":513,"column":4}},"8":{"start":{"line":31,"column":6},"end":{"line":31,"column":38}},"9":{"start":{"line":32,"column":6},"end":{"line":32,"column":29}},"10":{"start":{"line":33,"column":6},"end":{"line":33,"column":47}},"11":{"start":{"line":34,"column":6},"end":{"line":34,"column":45}},"12":{"start":{"line":41,"column":6},"end":{"line":44,"column":7}},"13":{"start":{"line":42,"column":8},"end":{"line":42,"column":56}},"14":{"start":{"line":43,"column":8},"end":{"line":43,"column":66}},"15":{"start":{"line":46,"column":6},"end":{"line":85,"column":16}},"16":{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},"17":{"start":{"line":50,"column":10},"end":{"line":50,"column":70}},"18":{"start":{"line":61,"column":8},"end":{"line":83,"column":9}},"19":{"start":{"line":63,"column":10},"end":{"line":67,"column":35}},"20":{"start":{"line":69,"column":10},"end":{"line":69,"column":46}},"21":{"start":{"line":71,"column":10},"end":{"line":75,"column":11}},"22":{"start":{"line":72,"column":12},"end":{"line":72,"column":28}},"23":{"start":{"line":73,"column":12},"end":{"line":73,"column":74}},"24":{"start":{"line":74,"column":12},"end":{"line":74,"column":43}},"25":{"start":{"line":77,"column":10},"end":{"line":77,"column":57}},"26":{"start":{"line":81,"column":10},"end":{"line":81,"column":23}},"27":{"start":{"line":100,"column":6},"end":{"line":100,"column":26}},"28":{"start":{"line":102,"column":6},"end":{"line":102,"column":29}},"29":{"start":{"line":104,"column":6},"end":{"line":108,"column":7}},"30":{"start":{"line":105,"column":8},"end":{"line":105,"column":51}},"31":{"start":{"line":107,"column":8},"end":{"line":107,"column":41}},"32":{"start":{"line":111,"column":6},"end":{"line":111,"column":13}},"33":{"start":{"line":114,"column":6},"end":{"line":122,"column":7}},"34":{"start":{"line":117,"column":8},"end":{"line":117,"column":30}},"35":{"start":{"line":121,"column":8},"end":{"line":121,"column":98}},"36":{"start":{"line":130,"column":6},"end":{"line":130,"column":48}},"37":{"start":{"line":133,"column":6},"end":{"line":133,"column":16}},"38":{"start":{"line":134,"column":6},"end":{"line":134,"column":64}},"39":{"start":{"line":136,"column":6},"end":{"line":141,"column":7}},"40":{"start":{"line":138,"column":8},"end":{"line":138,"column":19}},"41":{"start":{"line":139,"column":8},"end":{"line":139,"column":27}},"42":{"start":{"line":140,"column":8},"end":{"line":140,"column":19}},"43":{"start":{"line":143,"column":6},"end":{"line":143,"column":16}},"44":{"start":{"line":158,"column":6},"end":{"line":158,"column":29}},"45":{"start":{"line":160,"column":6},"end":{"line":160,"column":35}},"46":{"start":{"line":163,"column":6},"end":{"line":180,"column":7}},"47":{"start":{"line":165,"column":8},"end":{"line":165,"column":16}},"48":{"start":{"line":168,"column":8},"end":{"line":177,"column":9}},"49":{"start":{"line":171,"column":10},"end":{"line":171,"column":36}},"50":{"start":{"line":176,"column":10},"end":{"line":176,"column":32}},"51":{"start":{"line":179,"column":8},"end":{"line":179,"column":18}},"52":{"start":{"line":182,"column":6},"end":{"line":182,"column":16}},"53":{"start":{"line":196,"column":6},"end":{"line":196,"column":48}},"54":{"start":{"line":197,"column":6},"end":{"line":197,"column":111}},"55":{"start":{"line":200,"column":6},"end":{"line":200,"column":69}},"56":{"start":{"line":202,"column":6},"end":{"line":202,"column":130}},"57":{"start":{"line":205,"column":6},"end":{"line":205,"column":38}},"58":{"start":{"line":208,"column":6},"end":{"line":210,"column":7}},"59":{"start":{"line":209,"column":8},"end":{"line":209,"column":38}},"60":{"start":{"line":214,"column":6},"end":{"line":230,"column":7}},"61":{"start":{"line":218,"column":8},"end":{"line":218,"column":30}},"62":{"start":{"line":221,"column":8},"end":{"line":221,"column":78}},"63":{"start":{"line":224,"column":8},"end":{"line":224,"column":72}},"64":{"start":{"line":224,"column":44},"end":{"line":224,"column":68}},"65":{"start":{"line":227,"column":8},"end":{"line":229,"column":9}},"66":{"start":{"line":228,"column":10},"end":{"line":228,"column":43}},"67":{"start":{"line":233,"column":6},"end":{"line":233,"column":67}},"68":{"start":{"line":235,"column":6},"end":{"line":235,"column":54}},"69":{"start":{"line":238,"column":6},"end":{"line":249,"column":7}},"70":{"start":{"line":241,"column":8},"end":{"line":241,"column":91}},"71":{"start":{"line":242,"column":8},"end":{"line":242,"column":229}},"72":{"start":{"line":245,"column":8},"end":{"line":245,"column":93}},"73":{"start":{"line":247,"column":8},"end":{"line":247,"column":37}},"74":{"start":{"line":251,"column":6},"end":{"line":251,"column":19}},"75":{"start":{"line":265,"column":6},"end":{"line":265,"column":44}},"76":{"start":{"line":268,"column":6},"end":{"line":268,"column":53}},"77":{"start":{"line":269,"column":6},"end":{"line":269,"column":128}},"78":{"start":{"line":272,"column":6},"end":{"line":272,"column":100}},"79":{"start":{"line":275,"column":6},"end":{"line":275,"column":41}},"80":{"start":{"line":278,"column":6},"end":{"line":278,"column":72}},"81":{"start":{"line":278,"column":44},"end":{"line":278,"column":68}},"82":{"start":{"line":281,"column":6},"end":{"line":294,"column":7}},"83":{"start":{"line":285,"column":8},"end":{"line":285,"column":91}},"84":{"start":{"line":286,"column":8},"end":{"line":286,"column":225}},"85":{"start":{"line":289,"column":8},"end":{"line":289,"column":90}},"86":{"start":{"line":292,"column":8},"end":{"line":292,"column":35}},"87":{"start":{"line":296,"column":6},"end":{"line":296,"column":20}},"88":{"start":{"line":310,"column":6},"end":{"line":310,"column":32}},"89":{"start":{"line":311,"column":6},"end":{"line":311,"column":89}},"90":{"start":{"line":311,"column":18},"end":{"line":311,"column":89}},"91":{"start":{"line":313,"column":6},"end":{"line":313,"column":39}},"92":{"start":{"line":314,"column":6},"end":{"line":314,"column":131}},"93":{"start":{"line":314,"column":18},"end":{"line":314,"column":131}},"94":{"start":{"line":316,"column":6},"end":{"line":316,"column":19}},"95":{"start":{"line":325,"column":6},"end":{"line":325,"column":61}},"96":{"start":{"line":335,"column":6},"end":{"line":335,"column":29}},"97":{"start":{"line":336,"column":6},"end":{"line":336,"column":33}},"98":{"start":{"line":338,"column":6},"end":{"line":340,"column":34}},"99":{"start":{"line":342,"column":6},"end":{"line":344,"column":46}},"100":{"start":{"line":346,"column":6},"end":{"line":346,"column":16}},"101":{"start":{"line":348,"column":6},"end":{"line":362,"column":7}},"102":{"start":{"line":350,"column":8},"end":{"line":354,"column":9}},"103":{"start":{"line":351,"column":10},"end":{"line":351,"column":33}},"104":{"start":{"line":353,"column":10},"end":{"line":353,"column":32}},"105":{"start":{"line":356,"column":13},"end":{"line":362,"column":7}},"106":{"start":{"line":358,"column":8},"end":{"line":358,"column":30}},"107":{"start":{"line":361,"column":8},"end":{"line":361,"column":30}},"108":{"start":{"line":366,"column":6},"end":{"line":366,"column":36}},"109":{"start":{"line":366,"column":19},"end":{"line":366,"column":34}},"110":{"start":{"line":368,"column":6},"end":{"line":368,"column":19}},"111":{"start":{"line":377,"column":6},"end":{"line":377,"column":27}},"112":{"start":{"line":378,"column":6},"end":{"line":378,"column":107}},"113":{"start":{"line":382,"column":6},"end":{"line":382,"column":33}},"114":{"start":{"line":382,"column":18},"end":{"line":382,"column":31}},"115":{"start":{"line":384,"column":6},"end":{"line":384,"column":18}},"116":{"start":{"line":394,"column":6},"end":{"line":400,"column":7}},"117":{"start":{"line":395,"column":8},"end":{"line":395,"column":24}},"118":{"start":{"line":396,"column":8},"end":{"line":396,"column":68}},"119":{"start":{"line":397,"column":8},"end":{"line":397,"column":26}},"120":{"start":{"line":399,"column":8},"end":{"line":399,"column":18}},"121":{"start":{"line":406,"column":6},"end":{"line":406,"column":95}},"122":{"start":{"line":407,"column":6},"end":{"line":407,"column":100}},"123":{"start":{"line":410,"column":6},"end":{"line":412,"column":7}},"124":{"start":{"line":411,"column":8},"end":{"line":411,"column":21}},"125":{"start":{"line":414,"column":6},"end":{"line":414,"column":80}},"126":{"start":{"line":416,"column":6},"end":{"line":416,"column":20}},"127":{"start":{"line":422,"column":6},"end":{"line":424,"column":7}},"128":{"start":{"line":423,"column":8},"end":{"line":423,"column":20}},"129":{"start":{"line":427,"column":6},"end":{"line":427,"column":89}},"130":{"start":{"line":428,"column":6},"end":{"line":428,"column":227}},"131":{"start":{"line":431,"column":6},"end":{"line":433,"column":7}},"132":{"start":{"line":432,"column":8},"end":{"line":432,"column":20}},"133":{"start":{"line":436,"column":6},"end":{"line":436,"column":93}},"134":{"start":{"line":439,"column":6},"end":{"line":439,"column":42}},"135":{"start":{"line":440,"column":6},"end":{"line":450,"column":7}},"136":{"start":{"line":441,"column":8},"end":{"line":441,"column":54}},"137":{"start":{"line":443,"column":8},"end":{"line":443,"column":49}},"138":{"start":{"line":444,"column":8},"end":{"line":444,"column":127}},"139":{"start":{"line":446,"column":8},"end":{"line":448,"column":9}},"140":{"start":{"line":447,"column":10},"end":{"line":447,"column":23}},"141":{"start":{"line":453,"column":6},"end":{"line":453,"column":18}},"142":{"start":{"line":460,"column":6},"end":{"line":464,"column":7}},"143":{"start":{"line":461,"column":8},"end":{"line":461,"column":56}},"144":{"start":{"line":463,"column":8},"end":{"line":463,"column":20}},"145":{"start":{"line":472,"column":8},"end":{"line":472,"column":50}},"146":{"start":{"line":474,"column":8},"end":{"line":477,"column":9}},"147":{"start":{"line":476,"column":12},"end":{"line":476,"column":50}},"148":{"start":{"line":480,"column":8},"end":{"line":480,"column":54}},"149":{"start":{"line":482,"column":8},"end":{"line":485,"column":9}},"150":{"start":{"line":484,"column":12},"end":{"line":484,"column":46}},"151":{"start":{"line":488,"column":8},"end":{"line":488,"column":63}},"152":{"start":{"line":491,"column":8},"end":{"line":494,"column":9}},"153":{"start":{"line":493,"column":12},"end":{"line":493,"column":27}},"154":{"start":{"line":497,"column":8},"end":{"line":497,"column":31}},"155":{"start":{"line":498,"column":8},"end":{"line":502,"column":9}},"156":{"start":{"line":500,"column":12},"end":{"line":500,"column":32}},"157":{"start":{"line":501,"column":12},"end":{"line":501,"column":30}},"158":{"start":{"line":505,"column":8},"end":{"line":508,"column":11}},"159":{"start":{"line":507,"column":12},"end":{"line":507,"column":40}},"160":{"start":{"line":510,"column":8},"end":{"line":510,"column":49}},"161":{"start":{"line":521,"column":0},"end":{"line":527,"column":1}},"162":{"start":{"line":522,"column":2},"end":{"line":522,"column":37}},"163":{"start":{"line":522,"column":25},"end":{"line":522,"column":37}},"164":{"start":{"line":523,"column":2},"end":{"line":526,"column":25}},"165":{"start":{"line":524,"column":4},"end":{"line":524,"column":28}},"166":{"start":{"line":526,"column":14},"end":{"line":526,"column":23}},"167":{"start":{"line":530,"column":0},"end":{"line":562,"column":1}},"168":{"start":{"line":532,"column":4},"end":{"line":532,"column":103}},"169":{"start":{"line":534,"column":4},"end":{"line":534,"column":18}},"170":{"start":{"line":535,"column":4},"end":{"line":560,"column":7}},"171":{"start":{"line":537,"column":8},"end":{"line":537,"column":30}},"172":{"start":{"line":538,"column":8},"end":{"line":538,"column":18}},"173":{"start":{"line":540,"column":8},"end":{"line":559,"column":9}},"174":{"start":{"line":541,"column":12},"end":{"line":541,"column":34}},"175":{"start":{"line":542,"column":12},"end":{"line":556,"column":13}},"176":{"start":{"line":544,"column":16},"end":{"line":554,"column":17}},"177":{"start":{"line":546,"column":20},"end":{"line":549,"column":21}},"178":{"start":{"line":548,"column":24},"end":{"line":548,"column":47}},"179":{"start":{"line":553,"column":20},"end":{"line":553,"column":40}},"180":{"start":{"line":558,"column":12},"end":{"line":558,"column":31}}},"branchMap":{"1":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":6},"end":{"line":41,"column":6}},{"start":{"line":41,"column":6},"end":{"line":41,"column":6}}]},"2":{"line":43,"type":"cond-expr","locations":[{"start":{"line":43,"column":38},"end":{"line":43,"column":60}},{"start":{"line":43,"column":63},"end":{"line":43,"column":65}}]},"3":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":8},"end":{"line":49,"column":8}},{"start":{"line":49,"column":8},"end":{"line":49,"column":8}}]},"4":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":8},"end":{"line":61,"column":8}},{"start":{"line":61,"column":8},"end":{"line":61,"column":8}}]},"5":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":12},"end":{"line":64,"column":60}},{"start":{"line":65,"column":12},"end":{"line":65,"column":34}},{"start":{"line":66,"column":12},"end":{"line":66,"column":26}},{"start":{"line":67,"column":12},"end":{"line":67,"column":34}}]},"6":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":10},"end":{"line":71,"column":10}},{"start":{"line":71,"column":10},"end":{"line":71,"column":10}}]},"7":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":14},"end":{"line":102,"column":19}},{"start":{"line":102,"column":23},"end":{"line":102,"column":28}}]},"8":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":6},"end":{"line":104,"column":6}},{"start":{"line":104,"column":6},"end":{"line":104,"column":6}}]},"9":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":6},"end":{"line":114,"column":6}},{"start":{"line":114,"column":6},"end":{"line":114,"column":6}}]},"10":{"line":114,"type":"binary-expr","locations":[{"start":{"line":114,"column":10},"end":{"line":114,"column":16}},{"start":{"line":115,"column":10},"end":{"line":115,"column":48}}]},"11":{"line":121,"type":"binary-expr","locations":[{"start":{"line":121,"column":13},"end":{"line":121,"column":23}},{"start":{"line":121,"column":28},"end":{"line":121,"column":41}},{"start":{"line":121,"column":45},"end":{"line":121,"column":61}},{"start":{"line":121,"column":66},"end":{"line":121,"column":97}}]},"12":{"line":130,"type":"cond-expr","locations":[{"start":{"line":130,"column":33},"end":{"line":130,"column":42}},{"start":{"line":130,"column":45},"end":{"line":130,"column":47}}]},"13":{"line":134,"type":"cond-expr","locations":[{"start":{"line":134,"column":27},"end":{"line":134,"column":46}},{"start":{"line":134,"column":49},"end":{"line":134,"column":63}}]},"14":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":6},"end":{"line":136,"column":6}},{"start":{"line":136,"column":6},"end":{"line":136,"column":6}}]},"15":{"line":136,"type":"binary-expr","locations":[{"start":{"line":136,"column":10},"end":{"line":136,"column":35}},{"start":{"line":136,"column":39},"end":{"line":136,"column":45}}]},"16":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":14},"end":{"line":158,"column":19}},{"start":{"line":158,"column":23},"end":{"line":158,"column":28}}]},"17":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":6},"end":{"line":163,"column":6}},{"start":{"line":163,"column":6},"end":{"line":163,"column":6}}]},"18":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":8},"end":{"line":168,"column":8}},{"start":{"line":168,"column":8},"end":{"line":168,"column":8}}]},"19":{"line":168,"type":"binary-expr","locations":[{"start":{"line":168,"column":12},"end":{"line":168,"column":18}},{"start":{"line":169,"column":12},"end":{"line":169,"column":50}}]},"20":{"line":196,"type":"binary-expr","locations":[{"start":{"line":196,"column":25},"end":{"line":196,"column":41}},{"start":{"line":196,"column":45},"end":{"line":196,"column":47}}]},"21":{"line":197,"type":"binary-expr","locations":[{"start":{"line":197,"column":35},"end":{"line":197,"column":61}},{"start":{"line":197,"column":65},"end":{"line":197,"column":110}}]},"22":{"line":200,"type":"binary-expr","locations":[{"start":{"line":200,"column":22},"end":{"line":200,"column":38}},{"start":{"line":200,"column":42},"end":{"line":200,"column":68}}]},"23":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":6},"end":{"line":208,"column":6}},{"start":{"line":208,"column":6},"end":{"line":208,"column":6}}]},"24":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":6},"end":{"line":214,"column":6}},{"start":{"line":214,"column":6},"end":{"line":214,"column":6}}]},"25":{"line":221,"type":"binary-expr","locations":[{"start":{"line":221,"column":30},"end":{"line":221,"column":39}},{"start":{"line":221,"column":43},"end":{"line":221,"column":76}}]},"26":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":8},"end":{"line":227,"column":8}},{"start":{"line":227,"column":8},"end":{"line":227,"column":8}}]},"27":{"line":233,"type":"binary-expr","locations":[{"start":{"line":233,"column":14},"end":{"line":233,"column":53}},{"start":{"line":233,"column":57},"end":{"line":233,"column":66}}]},"28":{"line":233,"type":"binary-expr","locations":[{"start":{"line":233,"column":26},"end":{"line":233,"column":39}},{"start":{"line":233,"column":43},"end":{"line":233,"column":45}}]},"29":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":6},"end":{"line":238,"column":6}},{"start":{"line":238,"column":6},"end":{"line":238,"column":6}}]},"30":{"line":238,"type":"binary-expr","locations":[{"start":{"line":238,"column":10},"end":{"line":238,"column":27}},{"start":{"line":238,"column":31},"end":{"line":238,"column":51}}]},"31":{"line":241,"type":"cond-expr","locations":[{"start":{"line":241,"column":46},"end":{"line":241,"column":69}},{"start":{"line":241,"column":72},"end":{"line":241,"column":90}}]},"32":{"line":265,"type":"binary-expr","locations":[{"start":{"line":265,"column":23},"end":{"line":265,"column":37}},{"start":{"line":265,"column":41},"end":{"line":265,"column":43}}]},"33":{"line":268,"type":"binary-expr","locations":[{"start":{"line":268,"column":22},"end":{"line":268,"column":46}},{"start":{"line":268,"column":50},"end":{"line":268,"column":52}}]},"34":{"line":281,"type":"if","locations":[{"start":{"line":281,"column":6},"end":{"line":281,"column":6}},{"start":{"line":281,"column":6},"end":{"line":281,"column":6}}]},"35":{"line":281,"type":"binary-expr","locations":[{"start":{"line":281,"column":10},"end":{"line":281,"column":27}},{"start":{"line":282,"column":10},"end":{"line":282,"column":26}}]},"36":{"line":285,"type":"cond-expr","locations":[{"start":{"line":285,"column":46},"end":{"line":285,"column":69}},{"start":{"line":285,"column":72},"end":{"line":285,"column":90}}]},"37":{"line":311,"type":"if","locations":[{"start":{"line":311,"column":6},"end":{"line":311,"column":6}},{"start":{"line":311,"column":6},"end":{"line":311,"column":6}}]},"38":{"line":314,"type":"if","locations":[{"start":{"line":314,"column":6},"end":{"line":314,"column":6}},{"start":{"line":314,"column":6},"end":{"line":314,"column":6}}]},"39":{"line":325,"type":"binary-expr","locations":[{"start":{"line":325,"column":13},"end":{"line":325,"column":31}},{"start":{"line":325,"column":35},"end":{"line":325,"column":47}},{"start":{"line":325,"column":51},"end":{"line":325,"column":60}}]},"40":{"line":338,"type":"cond-expr","locations":[{"start":{"line":339,"column":28},"end":{"line":339,"column":66}},{"start":{"line":340,"column":28},"end":{"line":340,"column":33}}]},"41":{"line":339,"type":"binary-expr","locations":[{"start":{"line":339,"column":28},"end":{"line":339,"column":57}},{"start":{"line":339,"column":61},"end":{"line":339,"column":66}}]},"42":{"line":342,"type":"cond-expr","locations":[{"start":{"line":343,"column":28},"end":{"line":343,"column":44}},{"start":{"line":344,"column":28},"end":{"line":344,"column":45}}]},"43":{"line":348,"type":"if","locations":[{"start":{"line":348,"column":6},"end":{"line":348,"column":6}},{"start":{"line":348,"column":6},"end":{"line":348,"column":6}}]},"44":{"line":350,"type":"if","locations":[{"start":{"line":350,"column":8},"end":{"line":350,"column":8}},{"start":{"line":350,"column":8},"end":{"line":350,"column":8}}]},"45":{"line":356,"type":"if","locations":[{"start":{"line":356,"column":13},"end":{"line":356,"column":13}},{"start":{"line":356,"column":13},"end":{"line":356,"column":13}}]},"46":{"line":366,"type":"if","locations":[{"start":{"line":366,"column":6},"end":{"line":366,"column":6}},{"start":{"line":366,"column":6},"end":{"line":366,"column":6}}]},"47":{"line":378,"type":"binary-expr","locations":[{"start":{"line":378,"column":17},"end":{"line":378,"column":35}},{"start":{"line":378,"column":40},"end":{"line":378,"column":105}}]},"48":{"line":378,"type":"cond-expr","locations":[{"start":{"line":378,"column":78},"end":{"line":378,"column":90}},{"start":{"line":378,"column":93},"end":{"line":378,"column":105}}]},"49":{"line":382,"type":"if","locations":[{"start":{"line":382,"column":6},"end":{"line":382,"column":6}},{"start":{"line":382,"column":6},"end":{"line":382,"column":6}}]},"50":{"line":394,"type":"if","locations":[{"start":{"line":394,"column":6},"end":{"line":394,"column":6}},{"start":{"line":394,"column":6},"end":{"line":394,"column":6}}]},"51":{"line":397,"type":"binary-expr","locations":[{"start":{"line":397,"column":15},"end":{"line":397,"column":21}},{"start":{"line":397,"column":23},"end":{"line":397,"column":25}}]},"52":{"line":410,"type":"if","locations":[{"start":{"line":410,"column":6},"end":{"line":410,"column":6}},{"start":{"line":410,"column":6},"end":{"line":410,"column":6}}]},"53":{"line":422,"type":"if","locations":[{"start":{"line":422,"column":6},"end":{"line":422,"column":6}},{"start":{"line":422,"column":6},"end":{"line":422,"column":6}}]},"54":{"line":422,"type":"binary-expr","locations":[{"start":{"line":422,"column":10},"end":{"line":422,"column":28}},{"start":{"line":422,"column":32},"end":{"line":422,"column":53}}]},"55":{"line":427,"type":"cond-expr","locations":[{"start":{"line":427,"column":44},"end":{"line":427,"column":67}},{"start":{"line":427,"column":70},"end":{"line":427,"column":88}}]},"56":{"line":431,"type":"if","locations":[{"start":{"line":431,"column":6},"end":{"line":431,"column":6}},{"start":{"line":431,"column":6},"end":{"line":431,"column":6}}]},"57":{"line":446,"type":"if","locations":[{"start":{"line":446,"column":8},"end":{"line":446,"column":8}},{"start":{"line":446,"column":8},"end":{"line":446,"column":8}}]},"58":{"line":460,"type":"if","locations":[{"start":{"line":460,"column":6},"end":{"line":460,"column":6}},{"start":{"line":460,"column":6},"end":{"line":460,"column":6}}]},"59":{"line":460,"type":"binary-expr","locations":[{"start":{"line":460,"column":10},"end":{"line":460,"column":33}},{"start":{"line":460,"column":37},"end":{"line":460,"column":39}}]},"60":{"line":472,"type":"binary-expr","locations":[{"start":{"line":472,"column":31},"end":{"line":472,"column":43}},{"start":{"line":472,"column":47},"end":{"line":472,"column":49}}]},"61":{"line":474,"type":"if","locations":[{"start":{"line":474,"column":8},"end":{"line":474,"column":8}},{"start":{"line":474,"column":8},"end":{"line":474,"column":8}}]},"62":{"line":480,"type":"binary-expr","locations":[{"start":{"line":480,"column":29},"end":{"line":480,"column":47}},{"start":{"line":480,"column":51},"end":{"line":480,"column":53}}]},"63":{"line":482,"type":"if","locations":[{"start":{"line":482,"column":8},"end":{"line":482,"column":8}},{"start":{"line":482,"column":8},"end":{"line":482,"column":8}}]},"64":{"line":491,"type":"if","locations":[{"start":{"line":491,"column":8},"end":{"line":491,"column":8}},{"start":{"line":491,"column":8},"end":{"line":491,"column":8}}]},"65":{"line":498,"type":"if","locations":[{"start":{"line":498,"column":8},"end":{"line":498,"column":8}},{"start":{"line":498,"column":8},"end":{"line":498,"column":8}}]},"66":{"line":510,"type":"cond-expr","locations":[{"start":{"line":510,"column":28},"end":{"line":510,"column":38}},{"start":{"line":510,"column":41},"end":{"line":510,"column":48}}]},"67":{"line":522,"type":"if","locations":[{"start":{"line":522,"column":2},"end":{"line":522,"column":2}},{"start":{"line":522,"column":2},"end":{"line":522,"column":2}}]},"68":{"line":542,"type":"if","locations":[{"start":{"line":542,"column":12},"end":{"line":542,"column":12}},{"start":{"line":542,"column":12},"end":{"line":542,"column":12}}]},"69":{"line":544,"type":"if","locations":[{"start":{"line":544,"column":16},"end":{"line":544,"column":16}},{"start":{"line":544,"column":16},"end":{"line":544,"column":16}}]}},"code":["/**"," * Module dependencies"," */","var _ = require('lodash');","var mergeDefaults = require('merge-defaults');","var Boom = require('boom');","var Hoek = require('hoek');","var util = require('util');","","","/**"," * Utility methods used in built-in blueprint actions."," *"," * @type {Object}"," */","module.exports = function(request, options) {","    ","    return {","    ","    /** ","     * Given a Waterline query, populate the appropriate/specified","     * association attributes and return it so it can be chained","     * further ( i.e. so you can .exec() it )","     *","     * @param  {Query} query         [waterline query object]","     * @param  {Request} request","     * @param  {Object} options","     * @return {Query}","     */","    populateEach: function (query) {","      var DEFAULT_POPULATE_LIMIT = 30;","      var _options = options;","      var aliasFilter = request.query.populate;","      var shouldPopulate = _options.populate;","","      // Convert the string representation of the filter list to an Array. We","      // need this to provide flexibility in the request param. This way both","      // list string representations are supported:","      //   /model?populate=alias1,alias2,alias3","      //   /model?populate=[alias1,alias2,alias3]","      if (typeof aliasFilter === 'string') {","        aliasFilter = aliasFilter.replace(/\\[|\\]/g, '');","        aliasFilter = (aliasFilter) ? aliasFilter.split(',') : [];","      }","      ","      return _(_options.associations).reduce(function populateEachAssociation (query, association) {","  ","        // If an alias filter was provided, override the blueprint config.","        if (aliasFilter) {","          shouldPopulate = _.contains(aliasFilter, association.alias);","        }","        ","        // TODO: use max limit!","        // Only populate associations if a population filter has been supplied","        // with the request or if `populate` is set within the blueprint config.","        // Population filters will override any value stored in the config.","        //","        // Additionally, allow an object to be specified, where the key is the","        // name of the association attribute, and value is true/false","        // (true to populate, false to not)","        if (shouldPopulate) {","          ","          var populationLimit =","            _options['populate_'+association.alias+'_limit'] ||","            _options.populateLimit ||","            _options.limit ||","            DEFAULT_POPULATE_LIMIT;","","          var opts = {limit: populationLimit};","          // If the deleted flag is set, make sure those results aren't being included","          if(_options.deletedFlag) {","            var values = {};","            values[_options.deletedAttr] = { '!': _options.deletedValue };","            _.merge(opts, {where: values});","          }","            ","          return query.populate(association.alias, opts);","        ","        } else {","          ","          return query;","          ","        }","        ","      }, query);","    },","  ","  ","    /**","     * Parse primary key value for use in a Waterline criteria","     * (e.g. for `find`, `update`, or `destroy`)","     *","     * @param  {Request} request","     * @param  {Object} options","     * @param  {Boolean} child","     * @return {Integer|String}","     */","    parsePk: function (child) {","      ","      var primaryKeyParam;","      ","      child = child || false;","      ","      if (child) {","        primaryKeyParam = options.associatedPkName;","      }  else {","        primaryKeyParam = options.pkName;","      }","      ","      //TODO: support these options..id for parent and child","      var pk;","      ","      // If actAsUser modified the path, grab the user's pk from auth credentials.","      if (!child &&","          options._private.actAsUserModifiedPath) {","        ","        pk = this.getUserId();","        ","      } else { // Otherwise, grab it as per usual.","        ","        pk = options.id || (options.where && options.where.id) || request.params[primaryKeyParam];","      }","      ","      // TODO: make this smarter...","      // (e.g. look for actual primary key of model and look for it","      //  in the absence of `id`.)","      // See coercePK for reference (although be aware it is not currently in use)","  ","      // exclude criteria on id field","      pk = _.isPlainObject(pk) ? undefined : pk;","      ","      // If the primary key field for the record is specified, use it as criteria.","      var tmpPk;","      var pkAttr = child ? options.childPkAttr : options.pkAttr;","      ","      if (typeof pk !== \"undefined\" && pkAttr) {","        ","        tmpPk = {};","        tmpPk[pkAttr] = pk;","        pk = tmpPk;","      }","      ","      return pk;","    },","  ","  ","    /** ","     * Parse primary key value from parameters.","     * Throw an error if it cannot be retrieved.","     *","     * @param  {Request} request","     * @param  {Object} options","     * @param  {Boolean} child","     * @return {Integer|String}","     */","    requirePk: function (child) {","      ","      child = child || false;","      ","      var pk = this.parsePk(child);","  ","      // Validate the required `id` parameter","      if ( !pk ) {","        ","        var err;","        ","        // If path was modified for acting user, pk came from credentials.","        if (!child &&","            options._private.actAsUserModifiedPath) {","          ","          err = Boom.unauthorized();","          ","        } else {","          ","          // TODO: error message here.","          err = Boom.notFound();","        }","        ","        throw err;","      }","  ","      return pk;","    },","  ","  ","    /** ","     * Parse `criteria` for a Waterline `find` or `populate` from query parameters.","     *","     * @param  {Request} request","     * @param  {Object} options","     * @return {Object}            the WHERE criteria object","     */","    parseCriteria: function (child) {","  ","      // Allow customizable blacklist for params NOT to include as criteria.","      options.criteria = options.criteria || {};","      options.criteria.blacklist = options.criteria.blacklist || ['limit', 'skip', 'sort', 'populate', 'omit'];","  ","      // Validate blacklist to provide a more helpful error msg.","      var blacklist = options.criteria && options.criteria.blacklist;","      ","      Hoek.assert(_.isArray(blacklist), 'Invalid `options.criteria.blacklist`. Should be an array of strings (parameter names.)');","  ","      // Look for explicitly specified `where` parameter.","      var where = request.query.where;","  ","      // If `where` parameter is a string, try to interpret it as JSON","      if (_.isString(where)) {","        where = tryToParseJSON(where);","      }","  ","      // If `where` has not been specified, but other unbound parameter variables","      // **ARE** specified, build the `where` option using them.","      if (!where) {","  ","        // Prune params which aren't fit to be used as `where` criteria","        // to build a proper where query","        where = request.query;","  ","        // Omit built-in runtime config (like query modifiers)","        where = _.omit(where, blacklist || ['limit', 'skip', 'sort', 'omit']);","  ","        // Omit any params w/ undefined values","        where = _.omit(where, function (p){ return _.isUndefined(p); });","  ","        // Omit jsonp callback param (but only if jsonp is enabled)","        if (request.route.jsonp) {","          delete where[request.route.jsonp]","        }","      }","  ","      // Merge w/ options.where and return","      where = _.merge({}, options.where || {}, where) || undefined;","","      where = _.merge(where, this.checkDeletedFlag());","      ","      // Deal with ownership","      if (options.actAsUser && options.requireOwner) {","        ","        // Grab appropriate transformation object","        var ownerAttrTransformation = child ? options.childOwnerAttrs : options.ownerAttrs;","        Hoek.assert(_.isObject(ownerAttrTransformation), 'Owner attribute options (`options.childOwnerAttr`/`options.ownerAttr`/`options.childOwnerAttrs`/`options.ownerAttrs`) should be set for use with `options.requireOwner`.');","        ","        // Get new values with transformation","        var requireWhere = Hoek.transform(request.auth.credentials, ownerAttrTransformation);","        ","        _.merge(where, requireWhere);","        ","      }","      ","      return where;","    },","  ","  ","    /** TODO","     * Parse `values` for a Waterline `create` or `update` from all","     * request parameters.","     *","     * @param  {Request} req","     * @return {Object}","     */","    parseValues: function (child) {","  ","      // Allow customizable blacklist for params NOT to include as values.","      options.values = options.values || {};","  ","      // Validate blacklist to provide a more helpful error msg.","      var blacklist = options.values.blacklist || [];","      Hoek.assert(_.isArray(blacklist), 'Invalid `options.values.blacklist`. Should be an array of strings (parameter names.)');","  ","      // Merge payload into req.options.values, omitting the blacklist.","      var values = mergeDefaults(_.cloneDeep(request.payload), _.omit(options.values, 'blacklist'));","  ","      // Omit values that are in the blacklist (like query modifiers)","      values = _.omit(values, blacklist);","  ","      // Omit any values w/ undefined values","      values = _.omit(values, function (p){ return _.isUndefined(p); });","      ","      // Set owner value if we ought","      if (options.actAsUser &&","          options.setOwner) {","        ","        // Grab appropriate transformation object","        var ownerAttrTransformation = child ? options.childOwnerAttrs : options.ownerAttrs;","        Hoek.assert(_.isObject(ownerAttrTransformation), 'Owner attribute options (`options.childOwnerAttr`/`options.ownerAttr`/`options.childOwnerAttrs`/`options.ownerAttrs`) should be set for use with `options.setOwner`.');","        ","        // Get new values with transformation","        var newValues = Hoek.transform(request.auth.credentials, ownerAttrTransformation);","        ","        // Set new values","        _.merge(values, newValues);","        ","      }","      ","      return values;","    },","  ","  ","    /**","     * Determine the model class to use w/ this blueprint action.","     * @param  {Request} request","     * @param  {Object} options","     * @return {WLCollection}","     */","    parseModel: function () {","  ","      // Ensure a model can be deduced from the request options.","      ","      var model = options.model;","      if (!model) throw new Error(util.format('No `model` specified in route options.'));","  ","      var Model = request.model[model];","      if (!Model) throw new Error(util.format('Invalid route option, `model`.\\nI don\\'t know about any models named: `%s`',model));","  ","      return Model;","    },","  ","  ","    /** ","     * @param  {Request} request","     * @param  {Object} options","     */","    parseSort: function () {","      return request.query.sort || options.sort || undefined;","    },","  ","  ","    /**","     * @param  {Request} request","     * @param  {Object} options","     */","    parseLimit: function () {","      ","      var DEFAULT_LIMIT = 30;","      var DEFAULT_MAX_LIMIT = 30;","      ","      var requestedLimit = request.query.limit ?","                            Math.abs(request.query.limit) || false :","                            false;","      ","      var maxLimit       = (typeof options.maxLimit !== 'undefined') ?","                            options.maxLimit :","                            DEFAULT_MAX_LIMIT;","      ","      var limit;","      ","      if (requestedLimit) {","        ","        if (requestedLimit <= maxLimit) {","          limit = requestedLimit;","        } else {","          limit = DEFAULT_LIMIT;","        }","        ","      } else if (typeof options.limit !== 'undefined') {","        ","        limit = options.limit;","      } else {","        ","        limit = DEFAULT_LIMIT;","      }","      ","      // This is from sails.  What does it do?","      // I suppose it would cast skip to something falsy if it were not a number.","      if (limit) { limit = +limit; }","      ","      return limit;","    },","  ","  ","    /** ","     * @param  {Request} request","     * @param  {Object} options","     */","    parseSkip: function () {","      var DEFAULT_SKIP = 0;","      var skip = request.query.skip || (typeof options.skip !== 'undefined' ? options.skip : DEFAULT_SKIP);","      ","      // This is from sails.  What does it do?","      // I suppose it would cast skip to something falsy if it were not a number.","      if (skip) { skip = +skip; }","      ","      return skip;","    },","","","    /**","     * Determine whether or not the deletedFlag should be included in where clause.","     * @return {Object}","     */","    checkDeletedFlag: function() {","      // If the deleted flag is set, make sure those results aren't being included","      if(options.deletedFlag) {","        var values = {};","        values[options.deletedAttr] = { '!': options.deletedValue };","        return values||{};","      } else {","        return {};","      }","    },","  ","  ","    getUserId: function() {","      ","      Hoek.assert(options.actAsUser, 'Not currently acting as user, per `options.actAsUser`.');","      Hoek.assert(_.isString(options.userIdProperty), '`options.userIdProperty` must be a string.');","      ","      // No creds, no user id.","      if (!_.isObject(request.auth.credentials)) {","        return false;","      }","      ","      var userId = Hoek.reach(request.auth.credentials, options.userIdProperty);","      ","      return userId;","    },","  ","  ","    validOwnership: function(record, child) {","      ","      if (!options.actAsUser || !options.requireOwner) {","        return true;","      }","      ","      // Grab appropriate transformation object","      var ownerAttrTransformation = child ? options.childOwnerAttrs : options.ownerAttrs;","      Hoek.assert(_.isObject(ownerAttrTransformation), 'Owner attribute options (`options.childOwnerAttr`/`options.ownerAttr`/`options.childOwnerAttrs`/`options.ownerAttrs`) should be set for use with `options.requireOwner`.');","      ","      // There're no owner attrs set for this record","      if (_.isEmpty(ownerAttrTransformation)) {","        return true;","      }","      ","      // Get new values with transformation","      var requiredValues = Hoek.transform(request.auth.credentials, ownerAttrTransformation);","      ","      // Check for a non-match","      var requiredValue, recordOwnerValue;","      for (var attributeName in requiredValues) {","        requiredValue = requiredValues[attributeName];","        ","        recordOwnerValue = record[attributeName];","        Hoek.assert(!_.isUndefined(recordOwnerValue), 'Record does not have provided owner attribute `' + attributeName + '`.')","        ","        if (recordOwnerValue != requiredValue) {","          return false;","        }","        ","      }","      ","      // Passed all the tests.","      return true;","      ","    },","","","    getCreatedLocation: function(id) {","      ","      if (options.createdLocation && id) {","        return util.format(options.createdLocation, id);","      } else {","        return null;","      }","      ","    },","    ","    // Apply options.omit and request.query.omit","    omitFields: function(records) {","        ","        // Grab omissions from options","        var optionsOmissions = options.omit || [];","        ","        if (!_.isArray(optionsOmissions)) {","            ","            optionsOmissions = [optionsOmissions];","        }","        ","        // Grab omissions from query","        var queryOmissions = request.query.omit || [];","        ","        if (!_.isArray(queryOmissions)) {","            ","            queryOmissions = [queryOmissions];","        }","        ","        // All omissions","        var omissions = optionsOmissions.concat(queryOmissions)","        ","        // If there are no omissions, peace","        if (!omissions.length) {","            ","            return records;","        }","        ","        // Make records array","        var wasntArray = false;","        if (!_.isArray(records)) {","            ","            records = [records];","            wasntArray = true;","        }","        ","        // Do the deed, omit keys on each record","        records.forEach(function(record) {","            ","            omitDeep(record, omissions);","        });","        ","        return wasntArray ? records[0] : records;","    }","","  };","  ","}","","// Attempt to parse JSON","// If the parse fails, return the error object","// If JSON is falsey, return null","// (this is so that it will be ignored if not specified)","function tryToParseJSON(json) {","  if (!_.isString(json)) return null;","  try {","    return JSON.parse(json);","  }","  catch (e) { return e; }","}","","// keys, an array of Hoek style deep keys, to omit from obj","function omitDeep(obj, keys) {","    ","    Hoek.assert(_.isArray(keys), 'Internal omitDeep function requires keys parameter to be an array.');","    ","    var path, ref;","    keys.forEach(function(key) {","        ","        path = key.split('.');","        ref = obj;","        ","        for (var i = 0, il = path.length; i < il; ++i) {","            var segment = path[i];","            if (i + 1 === il) {","                ","                if (_.isArray(ref)) {","                    ","                    for (var j = 0, jl = ref.length; j < jl; ++j) {","                        ","                        delete ref[j][segment];","                    }","                    ","                } else {","                    ","                    delete ref[segment];","                }","                ","            }","            ","            ref = ref[segment];","        }","    });","    ","}",""],"l":{"4":1,"5":1,"6":1,"7":1,"8":1,"16":1,"18":0,"31":0,"32":0,"33":0,"34":0,"41":0,"42":0,"43":0,"46":0,"49":0,"50":0,"61":0,"63":0,"69":0,"71":0,"72":0,"73":0,"74":0,"77":0,"81":0,"100":0,"102":0,"104":0,"105":0,"107":0,"111":0,"114":0,"117":0,"121":0,"130":0,"133":0,"134":0,"136":0,"138":0,"139":0,"140":0,"143":0,"158":0,"160":0,"163":0,"165":0,"168":0,"171":0,"176":0,"179":0,"182":0,"196":0,"197":0,"200":0,"202":0,"205":0,"208":0,"209":0,"214":0,"218":0,"221":0,"224":0,"227":0,"228":0,"233":0,"235":0,"238":0,"241":0,"242":0,"245":0,"247":0,"251":0,"265":0,"268":0,"269":0,"272":0,"275":0,"278":0,"281":0,"285":0,"286":0,"289":0,"292":0,"296":0,"310":0,"311":0,"313":0,"314":0,"316":0,"325":0,"335":0,"336":0,"338":0,"342":0,"346":0,"348":0,"350":0,"351":0,"353":0,"356":0,"358":0,"361":0,"366":0,"368":0,"377":0,"378":0,"382":0,"384":0,"394":0,"395":0,"396":0,"397":0,"399":0,"406":0,"407":0,"410":0,"411":0,"414":0,"416":0,"422":0,"423":0,"427":0,"428":0,"431":0,"432":0,"436":0,"439":0,"440":0,"441":0,"443":0,"444":0,"446":0,"447":0,"453":0,"460":0,"461":0,"463":0,"472":0,"474":0,"476":0,"480":0,"482":0,"484":0,"488":0,"491":0,"493":0,"497":0,"498":0,"500":0,"501":0,"505":0,"507":0,"510":0,"521":1,"522":0,"523":0,"524":0,"526":0,"530":1,"532":0,"534":0,"535":0,"537":0,"538":0,"540":0,"541":0,"542":0,"544":0,"546":0,"548":0,"553":0,"558":0}}}